<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Linux系统编程</title>
    <link href="/2022/01/14/linux%E7%B3%BB%E7%BB%9F%E7%BC%96%E7%A8%8B/"/>
    <url>/2022/01/14/linux%E7%B3%BB%E7%BB%9F%E7%BC%96%E7%A8%8B/</url>
    
    <content type="html"><![CDATA[<h1 id="p1-linux命令基础习惯-linux系统编程">P1-Linux命令基础习惯-Linux系统编程</h1><ul><li><p>查看系统时间</p><p><img src="https://gitee.com/zengyuqin/drawing-bed/raw/master/img/image-20220114105658210.png" /></p></li><li><p>查看当前操作系统支持的shell</p><p><img src="https://gitee.com/zengyuqin/drawing-bed/raw/master/img/image-20220114105909837.png" /></p></li><li><p>查看当前操作系统正在使用的命令解析器</p><p><img src="https://gitee.com/zengyuqin/drawing-bed/raw/master/img/image-20220114110008230.png" /></p></li><li><p>键盘快捷键</p><p>Ctrl-d（Del） 删除光标后面的字符</p><p>Ctrl-a（Home） 光标移动到第一个字符</p><p>Ctrl-e（End） 光标移动到最后</p><p>Ctrl-u 清空整行</p><p>Ctrl-k 删除光标到行末</p><p>clear 清空终端屏幕</p></li></ul><h1 id="p2-类unix系统目录">P2-类Unix系统目录</h1><ul><li><p>查询当前所在目录</p><p><img src="https://gitee.com/zengyuqin/drawing-bed/raw/master/img/image-20220114111358784.png" /></p></li><li><p>Linux系统目录</p><p><img src="https://gitee.com/zengyuqin/drawing-bed/raw/master/img/image-20220114111518892.png" /></p><p>​ bin 存放二进制可执行文件</p><p>​ boot 存放开机启动程序</p><p>​ dev 存放设备文件（鼠标、键盘等）（Linux中”所见皆文件“）</p><p>​ home 存放用户</p><p>​ etc 存放用户相关的配置信息</p><p>​ lib 存放操作系统使用到的库</p><p>​ root 管理员主目录</p><p>​ usr 存放用户安装的第三方的库、文件等资源（如安装QQ）（unix software resource）</p></li></ul><h1 id="p3-目录和文件操作1">P3-目录和文件操作1</h1><ul><li><p>Linux系统文件类型：</p><p>​ 普通文件：-</p><p>​ 目录文件：d</p><p>​ 字符设备文件：c</p><p>​ 块设备文件：b</p><p>​ 软连接：l</p><p>​ 管道文件：p</p><p>​ 套接字：s</p><p>​</p></li><li><p>常用命令</p><p>cd - 返回上一个目录</p></li></ul><p><img src="https://gitee.com/zengyuqin/drawing-bed/raw/master/img/image-20220114114359391.png" /></p><p>​ ls 列出文件</p><p><img src="https://gitee.com/zengyuqin/drawing-bed/raw/master/img/image-20220114114615787.png" /></p><p>​ ls -l 列出详细信息</p><p><img src="https://gitee.com/zengyuqin/drawing-bed/raw/master/img/image-20220114114631525.png" /></p><p>​ ls -a 列出隐藏文件</p><p><img src="https://gitee.com/zengyuqin/drawing-bed/raw/master/img/image-20220114114652869.png" /></p><p>​ ls -l dirname 查询 dirname 文件夹中目录详细信息</p><p>​ ls -dl dirname 查询 dirname 本身的详细信息</p><p><img src="https://gitee.com/zengyuqin/drawing-bed/raw/master/img/image-20220114115245804.png" /></p><p>​ ls -R 递归查询目录</p><p>​ ls -Rl 递归查询目录详细信息</p><p><img src="https://gitee.com/zengyuqin/drawing-bed/raw/master/img/image-20220114120436116.png" /></p><p>​ which instruct 查看 instruct 指令所在路径</p><p><img src="https://gitee.com/zengyuqin/drawing-bed/raw/master/img/image-20220114121052856.png" /></p><p>​ rmdir dir 删除空目录 dir（非空时删不掉）</p><p>​ rm -r dir 递归删除目录 dir</p><p>​ rm -rf dir 强制删除 dir</p><p>​ rm file 删除文件 file</p><p>​ mkdir dir 创建文件夹 dir</p><p>​ touch file 创建文件 file</p><p>​ cp file dir 拷贝文件 file 到文件夹 dir 中</p><p>​ cp file1 file2 用文件 file1 创建一个文件 file2</p><p>​ cp -a dir1 dir2 把 dir1 中内容全部拷贝到 dir2 中</p><p>​ cp -r dir1 dir2 递归地把 dir1 中内容全部拷贝到 dir2 中</p><p>​ (-a 和 -r 的区别：-a 是把文件及文件的属性（权限、改动时间等）也全部拷贝过去)</p><h1 id="p4-目录和文件操作2">P4-目录和文件操作2</h1><p>​ cat filename 查看文件 filename 的内容</p><p>​ tac filename 逆序查看文件 filename 的内容<img src="https://gitee.com/zengyuqin/drawing-bed/raw/master/img/image-20220114125353935.png" /></p><p>​ more filename 分页显示（空格翻页，适用于查看大文件，按q退出）</p><p>​ less filename 分页显示（与上面类似）</p><p>​ head -n filename 查看文件前 n 行（不加-n 参数默认查看 10 行）</p><p>​</p><p>​ tree 命令，查看当前目录结构树（需要先安装 tree）</p><p><img src="https://gitee.com/zengyuqin/drawing-bed/raw/master/img/image-20220114135706183.png" /></p><h1 id="p5-软链接和硬链接">P5-软链接和硬链接</h1><ul><li><p>软链接</p><p>ln -s file1 file2 为文件 file1 创建软链接 file2</p><p>软链接就相当于 windows 中的快捷方式。</p></li></ul><p><img src="https://gitee.com/zengyuqin/drawing-bed/raw/master/img/image-20220114155312345.png" /></p><p>​ 若想让创建的软链接可以任意搬移，则需要在创建软链接时对源文件使用绝对路径。</p><p><img src="https://gitee.com/zengyuqin/drawing-bed/raw/master/img/image-20220114160210280.png" /></p><p>​ 可以看到，将创建的软链接移动到其他文件下后，用相对路径创建的软链接会显示为红色（表示该链接已失效），而用绝对路径创建的软链接仍可以使用，如下图所示。</p><p><img src="https://gitee.com/zengyuqin/drawing-bed/raw/master/img/image-20220114161024273.png" /></p><ul><li><p>硬链接</p><p>ln file1 file2 为文件 file1 创建硬链接 file2</p><p>创建硬链接后可以看到链接数会增加 1。</p><p><img src="https://gitee.com/zengyuqin/drawing-bed/raw/master/img/image-20220114161533672.png" /></p><p>若再创建一个硬链接，会发现这三个的链接数全是 3。</p><p><img src="https://gitee.com/zengyuqin/drawing-bed/raw/master/img/image-20220114162257295.png" /></p><p>操作系统给每一个文件赋予唯一的 Inode，当又相同的 Inode 的文件时，彼此同步。删除的时候只将硬链接计数减一，减为 0 时，Inode 被释放。</p><p><img src="https://gitee.com/zengyuqin/drawing-bed/raw/master/img/image-20220114162539400.png" /></p></li></ul><h1 id="p6-创建修改用户和用户组">P6-创建修改用户和用户组</h1><ul><li><p>查询当前登录用户</p><p><img src="https://gitee.com/zengyuqin/drawing-bed/raw/master/img/image-20220114163333016.png" /></p></li><li><p>chmod 修改权限操作</p><ol type="1"><li><p>文字设定法</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">chmod [who] [+|-|=] [mode] 文件名<br></code></pre></div></td></tr></table></figure><p>操作对象 who 可以是下述字母中的任一个或者它们的组合</p><figure class="highlight markdown"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs markdown">u表示”用户(user)”，即文件或目录的所有者<br>g表示”同组(group)用户”，即与文件所有者有相同组 ID 的所有用户<br>o表示”其他(others)用户”<br>a表示”所有(all)用户”，它是系统默认值<br></code></pre></div></td></tr></table></figure><p>操作符号可以是：</p><figure class="highlight markdown"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs markdown"><span class="hljs-bullet">+</span>添加某个权限<br><span class="hljs-bullet">-</span>取消某个权限<br>=赋予给定权限并取消其他所有权限（如果有的话）<br></code></pre></div></td></tr></table></figure><p>设置 mode 所表示的权限可用下述字母的任意组合：</p><figure class="highlight markdown"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs markdown">r可读<br>w可写<br>x可执行<br></code></pre></div></td></tr></table></figure><p>如下图：给文件所属用户添加可执行的操作权限</p><p><img src="https://gitee.com/zengyuqin/drawing-bed/raw/master/img/image-20220114164518813.png" /></p></li><li><p>数字设定法</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">chmod 操作码 文件名<br></code></pre></div></td></tr></table></figure><p>对于上述文件 hello.h 的权限</p><figure class="highlight markdown"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs markdown">-rw-rw-r--<br> 421421421<br>用户、同组用户、其他用户的权限均用二进制表示，<br>比如要设置当前用户对文件的读写和执行权限，<br>则当前用户的操作权限为 4（读）+ 2（写）+ 1（执行） = 7<br></code></pre></div></td></tr></table></figure><p>如下图：文件的权限设置为用户读写执行、同组只读、其他用户只读</p><p><img src="https://gitee.com/zengyuqin/drawing-bed/raw/master/img/image-20220114165428251.png" /></p></li></ol></li><li><p>chown 修改文件所属用户、所属组</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash"><span class="hljs-comment"># 创建用户</span><br>sudo adduser 新用户名<br><span class="hljs-comment"># 删除用户</span><br>sudo deluser 用户名<br><span class="hljs-comment"># 修改文件所属用户</span><br>sudo chown 新用户名 待修改文件<br></code></pre></div></td></tr></table></figure><p>目前操作系统中有两个用户、两个组</p><p><img src="https://gitee.com/zengyuqin/drawing-bed/raw/master/img/image-20220114165842311.png" /></p><p>将文件的所有者该为另一个用户</p><p><img src="https://gitee.com/zengyuqin/drawing-bed/raw/master/img/image-20220114170314831.png" /></p><p>此时，若用户 zyq 对文件 hello.h 的权限对应为 r-- ，若对该文件进行写操作操作系统则会进行警告</p><p><img src="https://gitee.com/zengyuqin/drawing-bed/raw/master/img/image-20220114170604951.png" /></p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash"><span class="hljs-comment"># 创建用户组</span><br>sudo groupadd 组名<br><span class="hljs-comment"># 删除用户组</span><br>sudo groupdel 组名<br><span class="hljs-comment"># 修改文件所属组</span><br>sudo chgrp 组名 文件名<br></code></pre></div></td></tr></table></figure><p>创建一个组，并修改文件的所属组</p><p><img src="https://gitee.com/zengyuqin/drawing-bed/raw/master/img/image-20220114171503504.png" /></p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash"><span class="hljs-comment"># 同时修改文件所属用户和用户组</span><br>sudo chown 用户名:组名 文件名<br></code></pre></div></td></tr></table></figure><p>同时修改文件所属用户和用户组</p><p><img src="https://gitee.com/zengyuqin/drawing-bed/raw/master/img/image-20220114172218624.png" /></p></li></ul><h1 id="p7-find命令">P7-find命令</h1><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">find 文件目录 -查询方式 该方式下的查询条件<br></code></pre></div></td></tr></table></figure><ul><li><p>-type 按文件类型搜索</p><p>d/p/s/c/b/c 可查找6种文件类型（见P3）</p><p><img src="https://gitee.com/zengyuqin/drawing-bed/raw/master/img/image-20220116210753321.png" /></p></li><li><p>-name 按文件名查找</p><p>会发现子文件夹里面也会查找</p><p><img src="https://gitee.com/zengyuqin/drawing-bed/raw/master/img/image-20220116212939114.png" /></p><p>若想只查找到某个层级，则需要参数 -maxdepth</p><p><img src="https://gitee.com/zengyuqin/drawing-bed/raw/master/img/image-20220116213205521.png" /></p></li><li><p>-size 按文件大小搜索</p><p>单位 k、M、G（注意大小写）</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash"><span class="hljs-comment"># 如：搜索大于20M小于50M的文件</span><br>find ./ -size +20M -size -50M<br></code></pre></div></td></tr></table></figure></li><li><p>按时间查询</p><p>-atime、-mtime、-ctime 天</p><p>-amin、-mmin、-cmin 分钟</p><figure class="highlight markdown"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs markdown">a（Access）表示最近访问时间<br><br>m    （Modify）表示最近更改时间，指更改文件属性一类的（权限、链接数）<br><br>c（Change）表示最近更改时间，指更改文件内容<br></code></pre></div></td></tr></table></figure></li></ul><p><img src="https://gitee.com/zengyuqin/drawing-bed/raw/master/img/image-20220116214819941.png" /></p><p><img src="https://gitee.com/zengyuqin/drawing-bed/raw/master/img/image-20220116215746081.png" /></p><h1 id="p8-午后回顾">P8-午后回顾</h1><h1 id="p9-find命令2">P9-find命令2</h1>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>博客写作笔记</title>
    <link href="/2022/01/13/%E5%8D%9A%E5%AE%A2%E5%86%99%E4%BD%9C%E7%AC%94%E8%AE%B0/"/>
    <url>/2022/01/13/%E5%8D%9A%E5%AE%A2%E5%86%99%E4%BD%9C%E7%AC%94%E8%AE%B0/</url>
    
    <content type="html"><![CDATA[<h1 id="front-matter">Front-matter</h1><p>常用配置项如下：</p><figure class="highlight yaml"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">title:</span> <span class="hljs-string">这是标题</span><br><span class="hljs-attr">excerpt:</span> <span class="hljs-string">这是摘要</span><br><span class="hljs-attr">index_img:</span> <span class="hljs-string">/img/example.jpg</span><br><span class="hljs-attr">date:</span> <span class="hljs-number">2019-10-10 10:00:00</span><br><span class="hljs-attr">categories:</span> <br><span class="hljs-bullet">-</span> <span class="hljs-string">通用</span><br><span class="hljs-attr">tags:</span><br><span class="hljs-bullet">-</span> <span class="hljs-string">博客</span><br><span class="hljs-attr">hide:</span> <span class="hljs-literal">true</span><br><span class="hljs-attr">sticky:</span> <span class="hljs-number">100</span><br><span class="hljs-meta">---</span><br></code></pre></div></td></tr></table></figure><h2 id="摘要">摘要</h2><p>默认开启了自动摘要，若要手动指定摘要，使用 <code>&lt;!-- more --&gt;</code> MD文档里划分，如：</p><figure class="highlight markdown"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs markdown">正文的一部分作为摘要<br>&lt;!-- more --&gt;<br>余下的正文<br></code></pre></div></td></tr></table></figure><p>或者在 <code>Front-matter</code> 里设置 <code>excerpt</code> 字段，如：</p><figure class="highlight yaml"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">title:</span> <span class="hljs-string">这是标题</span><br><span class="hljs-attr">excerpt:</span> <span class="hljs-string">这是摘要</span><br><span class="hljs-meta">---</span><br></code></pre></div></td></tr></table></figure><blockquote><p><strong>TIP</strong></p><p>无论哪种摘要都最多显示3行！</p></blockquote><h2 id="隐藏文章">隐藏文章</h2><p>如果想把某些文章隐藏起来，不在首页和其他分类里展示，可以在文章开头 <code>Front-matter</code> 中配置 <code>hide: true</code> 属性。</p><figure class="highlight yaml"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">title:</span> <span class="hljs-string">文章标题</span><br><span class="hljs-attr">index_img:</span> <span class="hljs-string">/img/example.jpg</span><br><span class="hljs-attr">date:</span> <span class="hljs-number">2019-10-10 10:00:00</span><br><span class="hljs-attr">hide:</span> <span class="hljs-literal">true</span><br><span class="hljs-meta">---</span><br><span class="hljs-string">以下是文章内容</span><br></code></pre></div></td></tr></table></figure><blockquote><p><strong>TIP</strong></p><p>隐藏会使文章在分类和标签类里都不显示</p><p>隐藏后依然可以通过文章链接访问</p></blockquote><h2 id="文章排序置顶">文章排序（置顶）</h2><p>如果想手动将某些文章固定在首页靠前的位置，可以在安装 <code>hexo-generator-index</code> &gt;= 2.0.0 版本的情况下，在文章开头 <code>Front-matter</code> 中配置 <code>sticky</code> 属性：</p><figure class="highlight yaml"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">title:</span> <span class="hljs-string">文章标题</span><br><span class="hljs-attr">index_img:</span> <span class="hljs-string">/img/example.jpg</span><br><span class="hljs-attr">date:</span> <span class="hljs-number">2019-10-10 10:00:00</span><br><span class="hljs-attr">sticky:</span> <span class="hljs-number">100</span><br><span class="hljs-meta">---</span><br><span class="hljs-string">以下是文章内容</span><br></code></pre></div></td></tr></table></figure><p><code>sticky</code> 数值越大，该文章越靠前，达到类似于置顶的效果，其他未设置的文章依然按默认排序。</p><p>当文章设置了 <code>sticky</code> 后，主题会默认在首页文章标题前增加一个图标，来标识这是一个置顶文章，你可以通过<strong>主题配置</strong>去关闭或修改这个功能：</p><figure class="highlight yaml"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs yaml"><span class="hljs-attr">index:</span><br>  <span class="hljs-attr">post_sticky:</span><br>    <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br>    <span class="hljs-attr">icon:</span> <span class="hljs-string">&#x27;iconfont icon-top&#x27;</span><br></code></pre></div></td></tr></table></figure><h2 id="latex数学公式">LaTeX数学公式</h2><p>为了提高不包含公式页面的加载速度，因此，在需要使用 <code>LaTeX</code> 语法的数学公式时，在文章 Front-matter 里指定 <code>mermaid: true</code> 。</p><h2 id="文章分类">文章分类</h2><p>下面的指定方法：</p><figure class="highlight yaml"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs yaml"><span class="hljs-attr">categories:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">Diary</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">Life</span><br></code></pre></div></td></tr></table></figure><p>会使分类<code>Life</code>成为<code>Diary</code>的子分类，而不是并列分类。因此，有必要为您的文章选择尽可能准确的分类。</p><p>如果你需要为文章添加多个分类，可以尝试以下 list 中的方法。</p><figure class="highlight yaml"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs yaml"><span class="hljs-attr">categories:</span><br><span class="hljs-bullet">-</span> [<span class="hljs-string">Diary</span>, <span class="hljs-string">PlayStation</span>]<br><span class="hljs-bullet">-</span> [<span class="hljs-string">Diary</span>, <span class="hljs-string">Games</span>]<br><span class="hljs-bullet">-</span> [<span class="hljs-string">Life</span>]<br></code></pre></div></td></tr></table></figure><p>此时这篇文章同时包括三个分类： <code>PlayStation</code> 和 <code>Games</code> 分别都是父分类 <code>Diary</code> 的子分类，同时 <code>Life</code> 是一个没有子分类的分类。</p><h1 id="文章">文章</h1><h2 id="首页封面图">首页封面图</h2><p>对于单篇文章，在文章开头 <code>Front-matter</code> 中配置 <code>index_img</code> 属性。</p><figure class="highlight yaml"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">title:</span> <span class="hljs-string">文章标题</span><br><span class="hljs-attr">tags:</span> [<span class="hljs-string">Hexo</span>, <span class="hljs-string">Fluid</span>]<br><span class="hljs-attr">index_img:</span> <span class="hljs-string">/img/example.jpg</span><br><span class="hljs-attr">date:</span> <span class="hljs-number">2019-10-10 10:00:00</span><br><span class="hljs-meta">---</span><br><span class="hljs-string">以下是文章内容</span><br></code></pre></div></td></tr></table></figure><h2 id="顶部大图">顶部大图</h2><p>默认显示<strong>主题配置</strong>中的 <code>post.banner_img</code>，如需要设置单个文章的 Banner，在 <code>Front-matter</code> 中指定 <code>banner_img</code> 属性。</p><figure class="highlight yaml"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">title:</span> <span class="hljs-string">文章标题</span><br><span class="hljs-attr">tags:</span> [<span class="hljs-string">Hexo</span>, <span class="hljs-string">Fluid</span>]<br><span class="hljs-attr">index_img:</span> <span class="hljs-string">/img/example.jpg</span><br><span class="hljs-attr">banner_img:</span> <span class="hljs-string">/img/post_banner.jpg</span><br><span class="hljs-attr">date:</span> <span class="hljs-number">2019-10-10 10:00:00</span><br><span class="hljs-meta">---</span><br><span class="hljs-string">以下是文章内容</span><br></code></pre></div></td></tr></table></figure><h2 id="评论">评论</h2><p>如果想在某个文章页关闭评论，或者想在某个自定义页面开启评论，可以通过在 <code>Front-matter</code> 设置 <code>comment: bool</code> 来控制评论开关，或者通过 <code>comment: 'type'</code> 来开启指定的评论插件。</p><figure class="highlight yaml"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">title:</span> <span class="hljs-string">关于页</span><br><span class="hljs-attr">layout:</span> <span class="hljs-string">about</span><br><span class="hljs-attr">index_img:</span> <span class="hljs-string">/img/example.jpg</span><br><span class="hljs-attr">date:</span> <span class="hljs-number">2019-10-10 10:00:00</span><br><span class="hljs-attr">comment:</span> <span class="hljs-string">&#x27;valine&#x27;</span><br><span class="hljs-meta">---</span><br><span class="hljs-string">以下是正文内容</span><br></code></pre></div></td></tr></table></figure><h2 id="脚注">脚注</h2><p>脚注语法如下：</p><figure class="highlight markdown"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs markdown">这是一句话[^1]<br>[<span class="hljs-symbol">^1</span>]: <span class="hljs-link">这是对应的脚注</span><br></code></pre></div></td></tr></table></figure><p>更优雅的使用方式，是将脚注写在文末，比如：（效果在本文最后）</p><figure class="highlight markdown"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs markdown">正文<br><br><span class="hljs-section">## 参考</span><br>[<span class="hljs-symbol">^1</span>]: <span class="hljs-link">参考资料1</span><br>[<span class="hljs-symbol">^2</span>]: <span class="hljs-link">参考资料2</span><br></code></pre></div></td></tr></table></figure><h2 id="tag插件">Tag插件</h2><h3 id="便签">便签</h3><p>在 markdown 中加入如下的代码来使用便签：</p><figure class="highlight markdown"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs markdown">&#123;% note success %&#125;<br>文字 或者 <span class="hljs-code">`markdown`</span> 均可<br>&#123;% endnote %&#125;<br></code></pre></div></td></tr></table></figure><p>或者使用 HTML 形式：</p><figure class="highlight html"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;note note-primary&quot;</span>&gt;</span>标签<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br></code></pre></div></td></tr></table></figure><p>可选便签：</p><p class="note note-primary">primary</p><p class="note note-secondary">secondary</p><p class="note note-success">success</p><p class="note note-danger">danger</p><p class="note note-warning">warning</p><p class="note note-info">info</p><p class="note note-light">light</p><blockquote><p><strong>WARNING</strong></p><p>使用时 <code>&#123;% note primary %&#125;` 和 `&#123;% endnote %&#125;</code> 需单独一行，否则会出现问题</p></blockquote><h3 id="行内标签">行内标签</h3><p>在 markdown 中加入如下的代码来使用 Label：</p><figure class="highlight markdown"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs markdown">&#123;% label primary @text %&#125;<br></code></pre></div></td></tr></table></figure><p>或者使用 HTML 形式：</p><figure class="highlight html"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;label label-primary&quot;</span>&gt;</span>Label<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br></code></pre></div></td></tr></table></figure><p>可选 Label：</p><p><span class="label label-primary">primary</span> <span class="label label-default">default</span> <span class="label label-info">info</span> <span class="label label-success">success</span> <span class="label label-danger">danger</span></p><h3 id="按钮">按钮</h3><p>你可以在 markdown 中加入如下的代码来使用 Button：</p><figure class="highlight markdown"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs markdown">&#123;% btn url, text, title %&#125;<br></code></pre></div></td></tr></table></figure><p>或者使用 HTML 形式：</p><figure class="highlight html"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;btn&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;url&quot;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;title&quot;</span>&gt;</span>text<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br></code></pre></div></td></tr></table></figure><p>url：跳转链接 text：显示的文字 title：鼠标悬停时显示的文字（可选）</p><p><a class="btn" href="#" title="title">text</a></p><h1 id="自定义页面">自定义页面</h1><h2 id="创建页面">创建页面</h2><p>如果想单独生成一个页面，步骤和创建「关于页」类似。</p><ol type="1"><li><p>首先用命令行创建页面：</p><figure class="highlight sh"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs sh">$ hexo new page example<br></code></pre></div></td></tr></table></figure></li><li><p>创建成功后编辑博客目录下 <code>/source/example/index.md</code>：</p><figure class="highlight yaml"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">title:</span> <span class="hljs-string">example</span><br><span class="hljs-attr">subtitle:</span> <span class="hljs-string">若不填默认是</span> <span class="hljs-string">title</span><br><span class="hljs-meta">---</span><br><span class="hljs-meta"></span><br><span class="hljs-string">这里写正文，支持</span> <span class="hljs-string">Markdown,</span> <span class="hljs-string">HTML</span><br></code></pre></div></td></tr></table></figure><p>正文默认没有 Markdown 样式，如果希望和文章相同的样式，可以加上：</p><figure class="highlight html"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;markdown-body&quot;</span>&gt;</span><br>正文<br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></div></td></tr></table></figure></li></ol><h2 id="配置">配置</h2><p>页面的参数配置可以在<strong>主题配置</strong>中统一设置：</p><figure class="highlight yaml"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs yaml"><span class="hljs-attr">page:</span><br>  <span class="hljs-attr">banner_img:</span> <span class="hljs-string">/img/default.png</span><br>  <span class="hljs-attr">banner_img_height:</span> <span class="hljs-number">70</span><br>  <span class="hljs-attr">banner_mask_alpha:</span> <span class="hljs-number">0.3</span><br></code></pre></div></td></tr></table></figure><p>也可以直接在 Front-matter 里单独设置：</p><figure class="highlight yaml"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">title:</span> <span class="hljs-string">example</span><br><span class="hljs-attr">banner_img:</span> <span class="hljs-string">/img/default.png</span><br><span class="hljs-attr">banner_img_height:</span> <span class="hljs-number">60</span><br><span class="hljs-attr">banner_mask_alpha:</span> <span class="hljs-number">0.5</span><br><span class="hljs-meta">---</span><br><span class="hljs-meta"></span><br><span class="hljs-string">这里可以写正文</span><br></code></pre></div></td></tr></table></figure><h2 id="评论-1">评论</h2><p>自定义页面也可以开启评论插件，和关于页的方式相同，通过在 Front-matter 设置 <code>comment: bool</code> 来控制评论开关，或者通过 <code>comment: 'type'</code> 来开启指定的评论插件：</p><figure class="highlight yaml"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">title:</span> <span class="hljs-string">example</span><br><span class="hljs-attr">comment:</span> <span class="hljs-string">&#x27;valine&#x27;</span><br><span class="hljs-meta">---</span><br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>通用</category>
      
    </categories>
    
    
    <tags>
      
      <tag>博客</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>力扣刷题日记2022/1/13</title>
    <link href="/2022/01/13/%E5%89%91%E6%8C%87%20Offer%20II%20007/"/>
    <url>/2022/01/13/%E5%89%91%E6%8C%87%20Offer%20II%20007/</url>
    
    <content type="html"><![CDATA[<h1 id="题目15.数组中和为-0-的三个数">题目：15.数组中和为 0 的三个数</h1><p><a href="https://leetcode-cn.com/problems/1fGaJU/">剑指 Offer II 007. 数组中和为 0 的三个数</a> <a href="https://leetcode-cn.com/problems/3sum/">与主站15题相似</a></p><p><strong>难度：</strong><label style="color:orange">中等</label></p><span id="more"></span><p>给定一个包含 n 个整数的数组 nums，判断 nums 中是否存在三个元素 a ，b ，c ，使得 a + b + c = 0 ？请找出所有和为 0 且 不重复 的三元组。</p><p><strong>示例 1:</strong></p><figure class="highlight subunit"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs subunit">输入：nums = [<span class="hljs-string">-1</span>,0,1,2,<span class="hljs-string">-1</span>,<span class="hljs-string">-4</span>]<br>输出：[[<span class="hljs-string">-1</span>,<span class="hljs-string">-1</span>,2],[<span class="hljs-string">-1</span>,0,1]]<br></code></pre></div></td></tr></table></figure><p><strong>示例 2:</strong></p><figure class="highlight inform7"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs inform7">输入：nums = <span class="hljs-comment">[]</span><br>输出：<span class="hljs-comment">[]</span><br></code></pre></div></td></tr></table></figure><p><strong>示例3：</strong></p><figure class="highlight inform7"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs inform7">输入：nums = <span class="hljs-comment">[0]</span><br>输出：<span class="hljs-comment">[]</span><br></code></pre></div></td></tr></table></figure><p><strong>提示：</strong></p><ul><li><span class="math inline">\(0&lt;=nums.length&lt;=3000\)</span></li><li><span class="math inline">\(-10^5&lt;=nums[i]&lt;=10^5\)</span></li></ul><p>来源：力扣（LeetCode）</p><p>链接：https://leetcode-cn.com/problems/1fGaJU</p><p>著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。</p><h1 id="解题思路">解题思路</h1><blockquote></blockquote><h1 id="代码">代码</h1><figure class="highlight c++"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs c++"><br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>力扣</category>
      
      <category>剑指offer（专项突破版）</category>
      
    </categories>
    
    
    <tags>
      
      <tag>力扣</tag>
      
      <tag>中等</tag>
      
      <tag>数组</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>正则表达式</title>
    <link href="/2021/12/13/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    <url>/2021/12/13/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/</url>
    
    <content type="html"><![CDATA[<p><code>Regular Expression</code> 正则表达式，使用单个字符串来描述、匹配一系列匹配某个句法规则的字符串。包括普通字符（例如，a 到 z 之间的字母）和特殊字符（称为"元字符"）。<a href="https://www.runoob.com/regexp/regexp-tutorial.html">正则表达式 – 教程 | 菜鸟教程 (runoob.com)</a></p><span id="more"></span><h1 id="元字符具有固定含义的特殊符号">元字符：具有固定含义的特殊符号</h1><p>常用的元字符：</p><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python">.匹配除换行符以外的任意字符<br>\w匹配字母或数字或下划线<br>\s匹配任意的空白符<br>\d匹配数字<br>\n匹配一个换行符<br>\t匹配一个制表符<br><br>^匹配字符串的开始<br>$匹配字符串的结尾<br>\W匹配非字母或数字或下划线<br>\D匹配非数字<br>\S匹配非空白符<br>a|b匹配字符a或字符b<br>()匹配括号内的表达式，也表示一个组<br>[...]匹配字符组中的字符<br>[^...]匹配除了字符组中字符的所有字符<br></code></pre></div></td></tr></table></figure><h1 id="量词控制前面的元字符出现的次数">量词：控制前面的元字符出现的次数</h1><ul><li>常用的量词：</li></ul><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python">*重复零次或更多次<br>+重复一次或更多次<br>?重复零次或一次<br>&#123;n&#125;重复n次<br>&#123;n,&#125;重复n次或更多次<br>&#123;n,m&#125;重复n到m次<br></code></pre></div></td></tr></table></figure><ul><li>贪婪匹配和惰性匹配：</li></ul><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python">.*贪婪匹配<br>.*?惰性匹配<br></code></pre></div></td></tr></table></figure><blockquote><p>.* 是尽可能多的匹配</p></blockquote><p><img src="https://gitee.com/zengyuqin/drawing-bed/raw/master/img/image-20211015102316420.png" alt="image-20211015102316420" style="zoom: 80%;" /></p><blockquote><p>.*? 是让*号尽可能少的去匹配</p></blockquote><p><img src="https://gitee.com/zengyuqin/drawing-bed/raw/master/img/image-20211015102249569.png" alt="image-20211015102249569" style="zoom: 80%;" /></p><ul><li><p>案例</p><p><img src="https://gitee.com/zengyuqin/drawing-bed/raw/master/img/image-20211015103541714.png" alt="image-20211015103541714" style="zoom: 80%;" /></p></li><li><p>常用的匹配可用工具直接生成</p><p><a href="https://tool.oschina.net/regex/">在线正则表达式测试 (oschina.net)</a></p><p><img src="https://gitee.com/zengyuqin/drawing-bed/raw/master/img/image-20211015103813206.png" alt="image-20211015103813206" style="zoom:50%;" /></p></li></ul>]]></content>
    
    
    <categories>
      
      <category>通用</category>
      
    </categories>
    
    
    <tags>
      
      <tag>正则表达式</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>力扣刷题日记2021/12/11</title>
    <link href="/2021/12/11/%E5%89%91%E6%8C%87%20Offer%20II%20006%20%E6%8E%92%E5%BA%8F%E6%95%B0%E7%BB%84%E4%B8%AD%E4%B8%A4%E4%B8%AA%E6%95%B0%E5%AD%97%E4%B9%8B%E5%92%8C/"/>
    <url>/2021/12/11/%E5%89%91%E6%8C%87%20Offer%20II%20006%20%E6%8E%92%E5%BA%8F%E6%95%B0%E7%BB%84%E4%B8%AD%E4%B8%A4%E4%B8%AA%E6%95%B0%E5%AD%97%E4%B9%8B%E5%92%8C/</url>
    
    <content type="html"><![CDATA[<h1 id="题目318.排序数组中两个数字之和">题目：318.排序数组中两个数字之和</h1><p><a href="https://leetcode-cn.com/problems/kLl5u1/">剑指 Offer II 006. 排序数组中两个数字之和</a> <a href="https://leetcode-cn.com/problems/two-sum-ii-input-array-is-sorted/">与主站167题相似</a></p><p><strong>难度：</strong><label style="color:green">简单</label></p><span id="more"></span><p>给定一个已按照 升序排列 的整数数组 numbers ，请你从数组中找出两个数满足相加之和等于目标数 target 。</p><p>函数应该以长度为 2 的整数数组的形式返回这两个数的下标值。numbers 的下标 从 0 开始计数 ，所以答案数组应当满足 $0 &lt;= answer[0] &lt; answer[1] &lt; numbers.length $。</p><p>假设数组中存在且只存在一对符合条件的数字，同时一个数字不能使用两次。</p><p><strong>示例 1:</strong></p><figure class="highlight nix"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs nix">输入：<span class="hljs-attr">numbers</span> = [<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">4</span>,<span class="hljs-number">6</span>,<span class="hljs-number">10</span>], <span class="hljs-attr">target</span> = <span class="hljs-number">8</span><br>输出：[<span class="hljs-number">1</span>,<span class="hljs-number">3</span>]<br>解释：<span class="hljs-number">2</span> 与 <span class="hljs-number">6</span> 之和等于目标数 <span class="hljs-number">8</span> 。因此 <span class="hljs-attr">index1</span> = <span class="hljs-number">1</span>, <span class="hljs-attr">index2</span> = <span class="hljs-number">3</span> 。<br></code></pre></div></td></tr></table></figure><p><strong>示例 2:</strong></p><figure class="highlight inform7"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs inform7">输入：numbers = <span class="hljs-comment">[2,3,4]</span>, target = 6<br>输出：<span class="hljs-comment">[0,2]</span><br></code></pre></div></td></tr></table></figure><p><strong>示例3：</strong></p><figure class="highlight inform7"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs inform7">输入：numbers = <span class="hljs-comment">[-1,0]</span>, target = -1<br>输出：<span class="hljs-comment">[0,1]</span><br></code></pre></div></td></tr></table></figure><p><strong>提示：</strong></p><ul><li><span class="math inline">\(2&lt;=numbers.length&lt;=3*10^4\)</span></li><li><span class="math inline">\(-1000&lt;=numbers[i]&lt;=1000\)</span></li><li><span class="math inline">\(numbers\)</span>按 <strong>递增顺序</strong> 排序</li><li><span class="math inline">\(-1000&lt;=target&lt;=1000\)</span></li><li>仅存在一个有效答案</li></ul><p>来源：力扣（LeetCode）</p><p>链接：https://leetcode-cn.com/problems/kLl5u1</p><p>著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。</p><h1 id="解题思路">解题思路</h1><blockquote><p>双指针。</p><p>目前为止做过最简单题......</p></blockquote><h1 id="代码">代码</h1><figure class="highlight c++"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs c++"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Solution</span> &#123;</span><br><span class="hljs-keyword">public</span>:<br>    <span class="hljs-function">vector&lt;<span class="hljs-keyword">int</span>&gt; <span class="hljs-title">twoSum</span><span class="hljs-params">(vector&lt;<span class="hljs-keyword">int</span>&gt;&amp; numbers, <span class="hljs-keyword">int</span> target)</span> </span>&#123;<br>        <span class="hljs-keyword">int</span> first = <span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">int</span> second = numbers.<span class="hljs-built_in">size</span>() - <span class="hljs-number">1</span>;<br>        vector&lt;<span class="hljs-keyword">int</span>&gt; ret;<br>        <span class="hljs-keyword">while</span> (first &lt; second) &#123;<br>            <span class="hljs-keyword">if</span> (numbers[first] + numbers[second] &gt; target) &#123;<br>                second--;<br>            &#125;<br>            <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(numbers[first] + numbers[second] &lt; target) &#123;<br>                first++;<br>            &#125;<br>            <span class="hljs-keyword">else</span> &#123;<br>                ret.<span class="hljs-built_in">push_back</span>(first);<br>                ret.<span class="hljs-built_in">push_back</span>(second);<br>                <span class="hljs-keyword">break</span>;<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">return</span> ret;<br>    &#125;<br>&#125;;<br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>力扣</category>
      
      <category>剑指offer（专项突破版）</category>
      
    </categories>
    
    
    <tags>
      
      <tag>力扣</tag>
      
      <tag>简单</tag>
      
      <tag>数组</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>力扣刷题日记2021/12/9</title>
    <link href="/2021/12/09/%E5%89%91%E6%8C%87%20Offer%20II%20005%20%E5%8D%95%E8%AF%8D%E9%95%BF%E5%BA%A6%E7%9A%84%E6%9C%80%E5%A4%A7%E4%B9%98%E7%A7%AF/"/>
    <url>/2021/12/09/%E5%89%91%E6%8C%87%20Offer%20II%20005%20%E5%8D%95%E8%AF%8D%E9%95%BF%E5%BA%A6%E7%9A%84%E6%9C%80%E5%A4%A7%E4%B9%98%E7%A7%AF/</url>
    
    <content type="html"><![CDATA[<h1 id="题目318.单词长度的最大乘积">题目：318.单词长度的最大乘积</h1><p><a href="https://leetcode-cn.com/problems/aseY1I/">剑指 Offer II 005. 单词长度的最大乘积</a> <a href="https://leetcode-cn.com/problems/maximum-product-of-word-lengths/">与主站318题相同</a></p><p><strong>难度：</strong><label style="color:orange">中等</label></p><span id="more"></span><p>给定一个字符串数组 words，请计算当两个字符串 words[i] 和 words[j] 不包含相同字符时，它们长度的乘积的最大值。假设字符串中只包含英语的小写字母。如果没有不包含相同字符的一对字符串，返回 0。</p><p><strong>示例 1:</strong></p><figure class="highlight applescript"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs applescript">输入: <span class="hljs-built_in">words</span> = [<span class="hljs-string">&quot;abcw&quot;</span>,<span class="hljs-string">&quot;baz&quot;</span>,<span class="hljs-string">&quot;foo&quot;</span>,<span class="hljs-string">&quot;bar&quot;</span>,<span class="hljs-string">&quot;fxyz&quot;</span>,<span class="hljs-string">&quot;abcdef&quot;</span>]<br>输出: <span class="hljs-number">16</span> <br>解释: 这两个单词为 <span class="hljs-string">&quot;abcw&quot;</span>, <span class="hljs-string">&quot;fxyz&quot;</span>。它们不包含相同字符，且长度的乘积最大。<br></code></pre></div></td></tr></table></figure><p><strong>示例 2:</strong></p><figure class="highlight applescript"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs applescript">输入: <span class="hljs-built_in">words</span> = [<span class="hljs-string">&quot;a&quot;</span>,<span class="hljs-string">&quot;ab&quot;</span>,<span class="hljs-string">&quot;abc&quot;</span>,<span class="hljs-string">&quot;d&quot;</span>,<span class="hljs-string">&quot;cd&quot;</span>,<span class="hljs-string">&quot;bcd&quot;</span>,<span class="hljs-string">&quot;abcd&quot;</span>]<br>输出: <span class="hljs-number">4</span> <br>解释: 这两个单词为 <span class="hljs-string">&quot;ab&quot;</span>, <span class="hljs-string">&quot;cd&quot;</span>。<br></code></pre></div></td></tr></table></figure><p><strong>示例3：</strong></p><figure class="highlight applescript"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs applescript">输入: <span class="hljs-built_in">words</span> = [<span class="hljs-string">&quot;a&quot;</span>,<span class="hljs-string">&quot;aa&quot;</span>,<span class="hljs-string">&quot;aaa&quot;</span>,<span class="hljs-string">&quot;aaaa&quot;</span>]<br>输出: <span class="hljs-number">0</span> <br>解释: 不存在这样的两个单词。<br></code></pre></div></td></tr></table></figure><p><strong>提示：</strong></p><ul><li><span class="math inline">\(2&lt;=words.length&lt;=1000\)</span></li><li><span class="math inline">\(1&lt;=words[i].length&lt;=1000\)</span></li><li><span class="math inline">\(words[i]\)</span>仅包含小写字母</li></ul><p>来源：力扣（LeetCode）</p><p>链接：https://leetcode-cn.com/problems/aseY1I</p><p>著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。</p><h1 id="解题思路">解题思路</h1><blockquote><p><strong>方法一：</strong>（最笨的方法，且会超时）</p><p>时间复杂度：<span class="math inline">\(O(n^2 * m^2)\)</span>，<span class="math inline">\(n\)</span>为数组长度，<span class="math inline">\(m\)</span>为字符串的平均长度。</p><p>该暴力求解的方法提交后会超时。嵌套两个<span class="math inline">\(for\)</span>循环进行字符串两两比较，在比较时再对两个字符串中的字符进行逐个比较，比较时调用了<span class="math inline">\(find()\)</span>函数。因此，相当于有了四层嵌套循环，时间复杂度很高。</p></blockquote><blockquote><p><strong>方法二：</strong>（哈希表）</p><p>对于每个字符串，可以用一个哈希表记录出现在该字符串中的所有字符。在判断两个字符串 <span class="math inline">\(str1\)</span> 和 <span class="math inline">\(str2\)</span> 中是否有相同的字符时，只需要从 'a' 到 'z' 判断某个字符是否在两个字符串对应的哈希表中都出现了。在哈希表中查找的时间复杂度是 <span class="math inline">\(O(1)\)</span>。</p></blockquote><blockquote><p><strong>方法三：</strong></p><p>时间复杂度：若数组 words 的长度为 n，平均每个字符串的长度为 k，那么时间复杂度为 <span class="math inline">\(O(nk + n^2)\)</span>。</p><ol type="1"><li>用一个数字二进制表示中的每一位记录一个字母是否出现，例如，字符串 <span class="math inline">\(ac\)</span> 可以用 <span class="math inline">\(00000000 00000000 00000000 00000101 = 3\)</span> 表示；</li><li>将每一个字符串中字母是否出现均用一个数字表示表示出来，当比较两个字符串是否存在相同字母时，使用 <span class="math inline">\(num1 \&amp; num2 == 0\)</span> 就可以轻易判断出来了。</li></ol></blockquote><blockquote><p><label style="color:Sienna">要深刻理解各种位运算的特点才能灵活地运用位运算来解决问题！！！</label></p></blockquote><h1 id="代码">代码</h1><p><strong>方法一：</strong>（力扣中会超时）</p><figure class="highlight c++"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs c++"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Solution</span> &#123;</span><br><span class="hljs-keyword">public</span>:<br>    <span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">maxProduct</span><span class="hljs-params">(vector&lt;string&gt;&amp; words)</span> </span>&#123;<br>        <span class="hljs-keyword">int</span> ret = <span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">int</span> tmp = <span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; words.<span class="hljs-built_in">size</span>() - <span class="hljs-number">1</span>; i++) &#123;<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> j = i + <span class="hljs-number">1</span>; j &lt; words.<span class="hljs-built_in">size</span>(); j++) &#123;<br>                <span class="hljs-keyword">if</span> (!<span class="hljs-built_in">has_same_letter</span>(words[i], words[j])) &#123;<br>                    tmp = words[i].<span class="hljs-built_in">size</span>() * words[j].<span class="hljs-built_in">size</span>();<br>                    <span class="hljs-keyword">if</span> (tmp &gt; ret)<br>                        ret = tmp;<br>                &#125;<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">return</span> ret;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">bool</span> <span class="hljs-title">has_same_letter</span><span class="hljs-params">(<span class="hljs-keyword">const</span> string&amp; a, <span class="hljs-keyword">const</span> string&amp; b)</span> </span>&#123;<br>        <span class="hljs-keyword">bool</span> flag = <span class="hljs-literal">false</span>;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; a.<span class="hljs-built_in">size</span>(); i++) &#123;<br>            <span class="hljs-keyword">auto</span> it = <span class="hljs-built_in">find</span>(b.<span class="hljs-built_in">begin</span>(), b.<span class="hljs-built_in">end</span>(), a[i]);<br>            <span class="hljs-keyword">if</span> (it != b.<span class="hljs-built_in">end</span>()) &#123;<br>                flag = <span class="hljs-literal">true</span>;<br>                <span class="hljs-keyword">break</span>;<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">return</span> flag;<br>    &#125;<br>&#125;;<br></code></pre></div></td></tr></table></figure><p><strong>方法二：</strong></p><figure class="highlight c++"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs c++"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Solution</span> &#123;</span><br><span class="hljs-keyword">public</span>:<br>    <span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">maxProduct</span><span class="hljs-params">(vector&lt;string&gt;&amp; words)</span> </span>&#123;<br>        vector&lt;<span class="hljs-keyword">int</span>&gt; words_num;<br>        <span class="hljs-keyword">int</span> ret = <span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; words.<span class="hljs-built_in">size</span>(); i++) &#123;<br>            <span class="hljs-keyword">int</span> tmp = <span class="hljs-number">0</span>;<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> j = <span class="hljs-number">0</span>; j &lt; words[i].<span class="hljs-built_in">size</span>(); j++) &#123;<br>                tmp |= <span class="hljs-number">1</span> &lt;&lt; (words[i][j] - <span class="hljs-string">&#x27;a&#x27;</span>);<br>            &#125;<br>            words_num.<span class="hljs-built_in">push_back</span>(tmp);<br>        &#125;<br><br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; words.<span class="hljs-built_in">size</span>()<span class="hljs-number">-1</span>; i++) &#123;<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> j = i + <span class="hljs-number">1</span>; j &lt; words.<span class="hljs-built_in">size</span>(); j++) &#123;<br>                <span class="hljs-keyword">if</span> (!(words_num[i] &amp; words_num[j])) &#123;<br>                    <span class="hljs-keyword">int</span> tmp = words[i].<span class="hljs-built_in">size</span>() * words[j].<span class="hljs-built_in">size</span>();<br>                    <span class="hljs-keyword">if</span> (tmp &gt; ret) &#123;<br>                        ret = tmp;<br>                    &#125;<br>                &#125;<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">return</span> ret;<br>    &#125;<br>&#125;;<br></code></pre></div></td></tr></table></figure><p><strong>方法三：</strong></p><figure class="highlight c++"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs c++"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Solution</span> &#123;</span><br><span class="hljs-keyword">public</span>:<br>    <span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">maxProduct</span><span class="hljs-params">(vector&lt;string&gt;&amp; words)</span> </span>&#123;<br>        vector&lt;<span class="hljs-keyword">int</span>&gt; words_num;<br>        <span class="hljs-keyword">int</span> ret = <span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; words.<span class="hljs-built_in">size</span>(); i++) &#123;<br>            <span class="hljs-keyword">int</span> tmp = <span class="hljs-number">0</span>;<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> j = <span class="hljs-number">0</span>; j &lt; words[i].<span class="hljs-built_in">size</span>(); j++) &#123;<br>                tmp |= <span class="hljs-number">1</span> &lt;&lt; (words[i][j] - <span class="hljs-string">&#x27;a&#x27;</span>);<br>            &#125;<br>            words_num.<span class="hljs-built_in">push_back</span>(tmp);<br>        &#125;<br><br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; words.<span class="hljs-built_in">size</span>()<span class="hljs-number">-1</span>; i++) &#123;<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> j = i + <span class="hljs-number">1</span>; j &lt; words.<span class="hljs-built_in">size</span>(); j++) &#123;<br>                <span class="hljs-keyword">if</span> (!(words_num[i] &amp; words_num[j])) &#123;<br>                    <span class="hljs-keyword">int</span> tmp = words[i].<span class="hljs-built_in">size</span>() * words[j].<span class="hljs-built_in">size</span>();<br>                    <span class="hljs-keyword">if</span> (tmp &gt; ret) &#123;<br>                        ret = tmp;<br>                    &#125;<br>                &#125;<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">return</span> ret;<br>    &#125;<br>&#125;;<br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>力扣</category>
      
      <category>剑指offer（专项突破版）</category>
      
    </categories>
    
    
    <tags>
      
      <tag>力扣</tag>
      
      <tag>整数</tag>
      
      <tag>位运算</tag>
      
      <tag>中等</tag>
      
      <tag>哈希表</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>力扣刷题日记2021/12/8</title>
    <link href="/2021/12/08/%E5%89%91%E6%8C%87%20Offer%20II%20004%20%E5%8F%AA%E5%87%BA%E7%8E%B0%E4%B8%80%E6%AC%A1%E7%9A%84%E6%95%B0%E5%AD%97/"/>
    <url>/2021/12/08/%E5%89%91%E6%8C%87%20Offer%20II%20004%20%E5%8F%AA%E5%87%BA%E7%8E%B0%E4%B8%80%E6%AC%A1%E7%9A%84%E6%95%B0%E5%AD%97/</url>
    
    <content type="html"><![CDATA[<h1 id="题目137.只出现一次的数字">题目：137.只出现一次的数字</h1><p><a href="https://leetcode-cn.com/problems/WGki4K/">剑指 Offer II 004. 只出现一次的数字</a> <a href="https://leetcode-cn.com/problems/single-number-ii/">与主站137题相同</a></p><p><strong>难度：</strong><label style="color:orange">中等</label></p><span id="more"></span><p>给你一个整数数组 nums ，除某个元素仅出现 一次 外，其余每个元素都恰出现 三次 。请你找出并返回那个只出现了一次的元素。</p><p><strong>示例 1:</strong></p><figure class="highlight dns"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs dns">输入：nums = [<span class="hljs-number">2,2,3,2</span>]<br>输出：<span class="hljs-number">3</span><br></code></pre></div></td></tr></table></figure><p><strong>示例 2:</strong></p><figure class="highlight dns"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs dns">输入：nums = [<span class="hljs-number">0,1,0,1</span>,<span class="hljs-number">0,1,100</span>]<br>输出：<span class="hljs-number">100</span><br></code></pre></div></td></tr></table></figure><p><strong>提示：</strong></p><ul><li><span class="math inline">\(1&lt;=nums.length&lt;=3*10^4\)</span></li><li><span class="math inline">\(-2^{31}&lt;=nums[i]&lt;=2^{31}-1\)</span></li><li><span class="math inline">\(nums\)</span>中，除某个元素仅出现 一次 外，其余每个元素都恰出现 三次</li></ul><p><strong>进阶：</strong></p><ul><li>你的算法应该具有线性时间复杂度。 你可以不使用额外空间来实现吗？</li></ul><p>来源：力扣（LeetCode）</p><p>链接：https://leetcode-cn.com/problems/WGki4K</p><p>著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。</p><h1 id="解题思路">解题思路</h1><blockquote><p><strong>方法一：</strong>（最笨的方法）</p><p>时间复杂度：<span class="math inline">\(O(nlogn)\)</span></p><ol type="1"><li>将数组从小到大排序；</li><li>从左到右顺序寻找。</li></ol></blockquote><blockquote><p><strong>方法二：</strong></p><p>时间复杂度：<span class="math inline">\(O(n)\)</span></p><p>分析：相同的3个数字异或的结果是数字本身，但将数组中所有数字进行异或并不能消除出现3次的数字，因此需要想其他办法。</p><p>解决：一个整数是由32个 0 或 1 组成的。可以将数组中所有数字同一位置的数位相加，若第 i 个数位相加后和能被3整除，则说明只出现一次的数字的第 i 位为0，若不能整除则第 i 位为1。得到只出现一次的数字的二进制形式即可得到它的十进制值，求十进制详细方式见代码。</p></blockquote><blockquote><p><strong>知识点：</strong></p><ol type="1"><li><p><code>std::sort</code> 采用的是快速排序，时间复杂度是 <span class="math inline">\(O(nlogn)\)</span>。</p></li><li><p>任何一个数异或它自己的结果都是0。</p></li><li><p>相同的3个数字异或的结果是数字本身。</p></li></ol></blockquote><h1 id="代码">代码</h1><p><strong>方法一：</strong></p><figure class="highlight c++"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs c++"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Solution</span> &#123;</span><br><span class="hljs-keyword">public</span>:<br>    <span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">singleNumber</span><span class="hljs-params">(vector&lt;<span class="hljs-keyword">int</span>&gt;&amp; nums)</span> </span>&#123;<br><br>        <span class="hljs-keyword">if</span> (nums.<span class="hljs-built_in">size</span>() == <span class="hljs-number">1</span>)<br>            <span class="hljs-keyword">return</span> nums[<span class="hljs-number">0</span>];<br><br>        <span class="hljs-built_in">sort</span>(nums.<span class="hljs-built_in">begin</span>(), nums.<span class="hljs-built_in">end</span>());<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; nums.<span class="hljs-built_in">size</span>(); i++)<br>        &#123;<br>            <span class="hljs-keyword">if</span> (i == nums.<span class="hljs-built_in">size</span>() - <span class="hljs-number">1</span>)<br>                <span class="hljs-keyword">return</span> nums[nums.<span class="hljs-built_in">size</span>() - <span class="hljs-number">1</span>];<br><br>            <span class="hljs-keyword">if</span> (nums[i] == nums[i + <span class="hljs-number">2</span>])<br>                i += <span class="hljs-number">2</span>;<br>            <span class="hljs-keyword">else</span><br>                <span class="hljs-keyword">return</span> nums[i];<br>        &#125;<br>        <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>    &#125;<br>&#125;;<br></code></pre></div></td></tr></table></figure><p><strong>方法二：</strong></p><figure class="highlight c++"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs c++"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Solution</span> &#123;</span><br><span class="hljs-keyword">public</span>:<br>   <span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">singleNumber</span><span class="hljs-params">(vector&lt;<span class="hljs-keyword">int</span>&gt;&amp; nums)</span> </span>&#123;<br>        <span class="hljs-keyword">int</span>* ret_bit = <span class="hljs-keyword">new</span> <span class="hljs-keyword">int</span>[<span class="hljs-number">32</span>]();<br>        <span class="hljs-keyword">int</span> ret = <span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; nums.<span class="hljs-built_in">size</span>(); i++)<br>        &#123;<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> j = <span class="hljs-number">0</span>; j &lt; <span class="hljs-number">32</span>; j++)<br>                ret_bit[j] += (nums[i] &gt;&gt; (<span class="hljs-number">31</span> - j) &amp; <span class="hljs-number">1</span>);<br>        &#125;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">32</span>; i++)<br>            ret = (ret &lt;&lt; <span class="hljs-number">1</span>) + ret_bit[i] % <span class="hljs-number">3</span>;<br>        <span class="hljs-keyword">delete</span>[]ret_bit;<br>        <span class="hljs-keyword">return</span> ret;<br>    &#125;<br>&#125;;<br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>力扣</category>
      
      <category>剑指offer（专项突破版）</category>
      
    </categories>
    
    
    <tags>
      
      <tag>力扣</tag>
      
      <tag>整数</tag>
      
      <tag>位运算</tag>
      
      <tag>中等</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>力扣刷题日记2021/12/7</title>
    <link href="/2021/12/07/%E5%89%91%E6%8C%87%20Offer%20II%20002%20%E4%BA%8C%E8%BF%9B%E5%88%B6%E5%8A%A0%E6%B3%95/"/>
    <url>/2021/12/07/%E5%89%91%E6%8C%87%20Offer%20II%20002%20%E4%BA%8C%E8%BF%9B%E5%88%B6%E5%8A%A0%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<h1 id="题目67.二进制加法">题目：67.二进制加法</h1><p><a href="https://leetcode-cn.com/problems/JFETK5/">剑指 Offer II 002. 二进制加法</a> <a href="https://leetcode-cn.com/problems/add-binary/">与主站67题相同</a></p><p><strong>难度：</strong><label style="color:green">简单</label></p><span id="more"></span><p>给定两个 01 字符串 a 和 b ，请计算它们的和，并以二进制字符串的形式输出。</p><p>输入为 非空 字符串且只包含数字 1 和 0。</p><p><strong>示例 1:</strong></p><figure class="highlight nix"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs nix">输入: <span class="hljs-attr">a</span> = <span class="hljs-string">&quot;11&quot;</span>, <span class="hljs-attr">b</span> = <span class="hljs-string">&quot;10&quot;</span><br>输出: <span class="hljs-string">&quot;101&quot;</span><br></code></pre></div></td></tr></table></figure><p><strong>示例 2:</strong></p><figure class="highlight nix"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs nix">输入: <span class="hljs-attr">a</span> = <span class="hljs-string">&quot;1010&quot;</span>, <span class="hljs-attr">b</span> = <span class="hljs-string">&quot;1011&quot;</span><br>输出: <span class="hljs-string">&quot;10101&quot;</span><br></code></pre></div></td></tr></table></figure><p><strong>提示：</strong></p><ul><li>每个字符串仅由字符 '0' 或 '1' 组成。</li><li><span class="math inline">\(1&lt;=a.length, b.length&lt;=10^4\)</span></li><li>字符串如果不是 "0" ，就都不含前导零。</li></ul><p>来源：力扣（LeetCode）</p><p>链接：https://leetcode-cn.com/problems/JFETK5</p><p>著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。</p><h1 id="解题思路">解题思路</h1><blockquote><p><strong>参考十进制加法：</strong></p><ol type="1"><li>将两个二进制数右端对齐；</li><li>从字符串右端开始，从右向左做加法；</li><li>逢二进一；</li><li>时间复杂度为<span class="math inline">\(O(max(len_a, len_b))\)</span>。</li></ol></blockquote><blockquote><p><strong>心得：</strong></p><ol type="1"><li><p>力扣题解分析了另一种不可行的思路，我在写时没有考虑到这方面：</p><p>将两个二进制数分别转换为十进制数，相加后再转换为二进制数，即可得到答案。</p><p>但该方法的不足：①题目二进制字符串的长度过长，两数相加时可能会溢出；②时间复杂度为<span class="math inline">\(O(len_a + len_b)\)</span>。</p></li></ol></blockquote><h1 id="代码">代码</h1><figure class="highlight c++"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs c++"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Solution</span> &#123;</span><br><span class="hljs-keyword">public</span>:<br>    <span class="hljs-function">string <span class="hljs-title">addBinary</span><span class="hljs-params">(string a, string b)</span> </span>&#123;<br>        <span class="hljs-comment">//向右对齐，位数少的左边补0</span><br>        <span class="hljs-keyword">int</span> len_a = a.<span class="hljs-built_in">length</span>();<br>        <span class="hljs-keyword">int</span> len_b = b.<span class="hljs-built_in">length</span>();<br>        deque&lt;<span class="hljs-keyword">char</span>&gt; ret_deque;<br>        string ret_str;<br>        <span class="hljs-keyword">if</span> (len_a &lt; len_b)<br>        &#123;<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; len_b - len_a; i++)<br>                a = <span class="hljs-string">&#x27;0&#x27;</span> + a;<br>        &#125;<br>        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (len_a &gt; len_b)<br>        &#123;<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; len_a - len_b; i++)<br>                b = <span class="hljs-string">&#x27;0&#x27;</span> + b;<br>        &#125;<br><br>        <span class="hljs-keyword">char</span> carry_bit = <span class="hljs-string">&#x27;0&#x27;</span>;    <span class="hljs-comment">//记录向前的进位</span><br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = a.<span class="hljs-built_in">length</span>() - <span class="hljs-number">1</span>; i &gt;= <span class="hljs-number">0</span>; i--)<br>        &#123;<br>            <span class="hljs-keyword">if</span> ((a[i] == <span class="hljs-string">&#x27;1&#x27;</span> &amp;&amp; b[i] == <span class="hljs-string">&#x27;0&#x27;</span>) || (a[i] == <span class="hljs-string">&#x27;0&#x27;</span> &amp;&amp; b[i] == <span class="hljs-string">&#x27;1&#x27;</span>))<br>            &#123;<br>                <span class="hljs-keyword">if</span> (carry_bit == <span class="hljs-string">&#x27;1&#x27;</span>) <br>                &#123;<br>                    ret_deque.<span class="hljs-built_in">push_front</span>(<span class="hljs-string">&#x27;0&#x27;</span>);<br>                    carry_bit = <span class="hljs-string">&#x27;1&#x27;</span>;<br>                &#125;<br>                <span class="hljs-keyword">else</span><br>                &#123;<br>                    ret_deque.<span class="hljs-built_in">push_front</span>(<span class="hljs-string">&#x27;1&#x27;</span>);<br>                    carry_bit = <span class="hljs-string">&#x27;0&#x27;</span>;<br>                &#125;<br>                <br>            &#125;<br>            <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (a[i] == <span class="hljs-string">&#x27;0&#x27;</span> &amp;&amp; b[i] == <span class="hljs-string">&#x27;0&#x27;</span>)<br>            &#123;<br>                <span class="hljs-keyword">if</span> (carry_bit == <span class="hljs-string">&#x27;1&#x27;</span>)<br>                    ret_deque.<span class="hljs-built_in">push_front</span>(<span class="hljs-string">&#x27;1&#x27;</span>);<br>                <span class="hljs-keyword">else</span><br>                    ret_deque.<span class="hljs-built_in">push_front</span>(<span class="hljs-string">&#x27;0&#x27;</span>);<br><br>                carry_bit = <span class="hljs-string">&#x27;0&#x27;</span>;<br>            &#125;<br>            <span class="hljs-keyword">else</span><br>            &#123;<br>                <span class="hljs-keyword">if</span> (carry_bit == <span class="hljs-string">&#x27;1&#x27;</span>)<br>                &#123;<br>                    ret_deque.<span class="hljs-built_in">push_front</span>(<span class="hljs-string">&#x27;1&#x27;</span>);<br>                    carry_bit = <span class="hljs-string">&#x27;1&#x27;</span>;<br>                &#125;<br>                <span class="hljs-keyword">else</span><br>                &#123;<br>                    ret_deque.<span class="hljs-built_in">push_front</span>(<span class="hljs-string">&#x27;0&#x27;</span>);<br>                    carry_bit = <span class="hljs-string">&#x27;1&#x27;</span>;<br>                &#125;<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">if</span> (carry_bit == <span class="hljs-string">&#x27;1&#x27;</span>)<br>            ret_deque.<span class="hljs-built_in">push_front</span>(<span class="hljs-string">&#x27;1&#x27;</span>);<br><br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; ret_deque.<span class="hljs-built_in">size</span>(); i++)<br>            ret_str += ret_deque[i];<br><br>        <span class="hljs-keyword">return</span> ret_str;<br>    &#125;<br>&#125;;<br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>力扣</category>
      
      <category>剑指offer（专项突破版）</category>
      
    </categories>
    
    
    <tags>
      
      <tag>力扣</tag>
      
      <tag>整数</tag>
      
      <tag>简单</tag>
      
      <tag>位运算</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>力扣刷题日记2021/12/7</title>
    <link href="/2021/12/07/%E5%89%91%E6%8C%87%20Offer%20II%20003%20%E5%89%8D%20n%20%E4%B8%AA%E6%95%B0%E5%AD%97%E4%BA%8C%E8%BF%9B%E5%88%B6%E4%B8%AD%201%20%E7%9A%84%E4%B8%AA%E6%95%B0/"/>
    <url>/2021/12/07/%E5%89%91%E6%8C%87%20Offer%20II%20003%20%E5%89%8D%20n%20%E4%B8%AA%E6%95%B0%E5%AD%97%E4%BA%8C%E8%BF%9B%E5%88%B6%E4%B8%AD%201%20%E7%9A%84%E4%B8%AA%E6%95%B0/</url>
    
    <content type="html"><![CDATA[<h1 id="题目338.前-n-个数字二进制中-1-的个数">题目：338.前 n 个数字二进制中 1 的个数</h1><p><a href="https://leetcode-cn.com/problems/w3tCBm/">剑指 Offer II 003. 前 n 个数字二进制中 1 的个数</a> <a href="https://leetcode-cn.com/problems/counting-bits/">与主站338题相同</a></p><p><strong>难度：</strong><label style="color:green">简单</label></p><span id="more"></span><p>给定一个非负整数 n ，请计算 0 到 n 之间的每个数字的二进制表示中 1 的个数，并输出一个数组。</p><p><strong>示例 1:</strong></p><figure class="highlight ada"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs ada">输入: n = <span class="hljs-number">2</span><br>输出: [<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>]<br>解释: <br><span class="hljs-number">0</span> <span class="hljs-comment">--&gt; 0</span><br><span class="hljs-number">1</span> <span class="hljs-comment">--&gt; 1</span><br><span class="hljs-number">2</span> <span class="hljs-comment">--&gt; 10</span><br></code></pre></div></td></tr></table></figure><p><strong>示例 2:</strong></p><figure class="highlight ada"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs ada">输入: n = <span class="hljs-number">5</span><br>输出: [<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">1</span>,<span class="hljs-number">2</span>]<br>解释:<br><span class="hljs-number">0</span> <span class="hljs-comment">--&gt; 0</span><br><span class="hljs-number">1</span> <span class="hljs-comment">--&gt; 1</span><br><span class="hljs-number">2</span> <span class="hljs-comment">--&gt; 10</span><br><span class="hljs-number">3</span> <span class="hljs-comment">--&gt; 11</span><br><span class="hljs-number">4</span> <span class="hljs-comment">--&gt; 100</span><br><span class="hljs-number">5</span> <span class="hljs-comment">--&gt; 101</span><br></code></pre></div></td></tr></table></figure><p><strong>说明：</strong></p><ul><li><span class="math inline">\(1&lt;=n&lt;=10^5\)</span></li></ul><p><strong>进阶：</strong></p><ul><li>给出时间复杂度为 <span class="math inline">\(O(n*sizeof(integer))\)</span> 的解答非常容易。但你可以在线性时间 <span class="math inline">\(O(n)\)</span> 内用一趟扫描做到吗？</li></ul><p>来源：力扣（LeetCode）</p><p>链接：https://leetcode-cn.com/problems/w3tCBm</p><p>著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。</p><h1 id="解题思路">解题思路</h1><blockquote><p><strong>方法一：</strong></p><p>时间复杂度： <span class="math inline">\(O(n*sizeof(integer))\)</span></p><p>最容易想到的方式，遍历每个数，采用<strong>右移</strong>逐个求出1的个数。</p><p><strong>求一个整数的二进制形式：</strong></p><p>若一个数是奇数，那么这个数二进制形式的最后一位一定为1。通过这个规则，不断对该整数进行右移（除以2）操作，若每右移一次得到的结果为一个奇数，则该结果二进制形式中最后一位为1。由此可以得到二进制形式。</p></blockquote><blockquote><p><strong>方法二：</strong><label style="color:blue">Brian Kernighan（布莱恩·柯林汉) 算法</label></p><p><label style="color:red">后面需要重做</label></p><p>时间复杂度：<span class="math inline">\(O(n logn)\)</span></p><p>对于任意整数 <span class="math inline">\(x\)</span>，令 $ x=x&amp;(x-1)$，该运算将 <span class="math inline">\(x\)</span> 的二进制表示的最后一个 1 变成 0。因此，对 <span class="math inline">\(x\)</span> 重复该操作，直到 <span class="math inline">\(x\)</span> 变成 0，则操作次数即为 <span class="math inline">\(x\)</span> 的“一比特数”。</p></blockquote><blockquote><p><strong>方法三：</strong>动态规划</p><p><label style="color:red">后面需要重做</label></p><p>时间复杂度：<span class="math inline">\(O(n)\)</span></p><p>由方法二可发现，整数 <span class="math inline">\(i\)</span> 的二进制形式中 1 的个数比 <span class="math inline">\(i\&amp;(i-1)\)</span> 的二进制形式中 1 的个数多 1，可根据这个规律采用动态规划来做。</p></blockquote><blockquote><p><strong>薄弱知识点：</strong></p><p>位运算比除法运算和求余运算更高效，因此，可用 <span class="math inline">\(i&gt;&gt;1\)</span>代替 <span class="math inline">\(i/2\)</span>，可用 <span class="math inline">\(i\&amp;1\)</span> 计算 <span class="math inline">\(i\%2\)</span>。</p></blockquote><h1 id="代码">代码</h1><p><strong>方法一：</strong></p><figure class="highlight c++"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs c++"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Solution</span> &#123;</span><br><span class="hljs-keyword">public</span>:<br>    <span class="hljs-function">vector&lt;<span class="hljs-keyword">int</span>&gt; <span class="hljs-title">countBits</span><span class="hljs-params">(<span class="hljs-keyword">int</span> n)</span> </span>&#123;<br>        vector&lt;<span class="hljs-keyword">int</span>&gt; tmp;<br><br>        <span class="hljs-keyword">if</span> (n == <span class="hljs-number">0</span>) <br>            tmp.<span class="hljs-built_in">push_back</span>(<span class="hljs-number">0</span>);<br>        <span class="hljs-keyword">else</span> <br>        &#123;<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt;= n; i++)<br>                tmp.<span class="hljs-built_in">push_back</span>(<span class="hljs-built_in">counter</span>(i));<br>        &#125;<br>        <span class="hljs-keyword">return</span> tmp;<br>    &#125;<br><br>    <span class="hljs-comment">//计算number对于二进制中1的个数</span><br>    <span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">counter</span><span class="hljs-params">(<span class="hljs-keyword">int</span>&amp; number)</span> </span>&#123;<br>        <span class="hljs-keyword">int</span> num = <span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">int</span> tmp = number;<br>        <br>        <span class="hljs-keyword">if</span> (number % <span class="hljs-number">2</span> == <span class="hljs-number">1</span>)<br>            num++;<br><br>        tmp = tmp &gt;&gt; <span class="hljs-number">1</span>;<br><br>        <span class="hljs-keyword">while</span> (tmp != <span class="hljs-number">0</span>) <br>        &#123;<br>            <span class="hljs-keyword">if</span> (tmp % <span class="hljs-number">2</span> == <span class="hljs-number">1</span>)<br>                num++;<br>            tmp = tmp &gt;&gt; <span class="hljs-number">1</span>;<br>        &#125;<br><br>        <span class="hljs-keyword">return</span> num;<br>    &#125;<br>&#125;;<br><br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>力扣</category>
      
      <category>剑指offer（专项突破版）</category>
      
    </categories>
    
    
    <tags>
      
      <tag>力扣</tag>
      
      <tag>整数</tag>
      
      <tag>简单</tag>
      
      <tag>位运算</tag>
      
      <tag>动态规划</tag>
      
      <tag>布莱恩·柯林汉算法</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>力扣刷题日记2021/12/6</title>
    <link href="/2021/12/06/%E5%89%91%E6%8C%87%20Offer%20II%20001%20%E6%95%B4%E6%95%B0%E9%99%A4%E6%B3%95/"/>
    <url>/2021/12/06/%E5%89%91%E6%8C%87%20Offer%20II%20001%20%E6%95%B4%E6%95%B0%E9%99%A4%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<h1 id="题目-29.两数相除">题目： 29.两数相除</h1><p><a href="https://leetcode-cn.com/problems/xoh6Oh/">剑指 Offer II 001. 整数除法</a> <a href="https://leetcode-cn.com/problems/divide-two-integers/">与主站 29 题相同</a></p><p><strong>难度：</strong><label style="color:green">简单</label> <label style="color:red">（后面需要重新做）</label></p><span id="more"></span><p>给定两个整数 a 和 b ，求它们的除法的商 a/b ，要求不得使用乘号 '*'、除号 '/' 以及求余符号 '%' 。</p><p><strong>注意：</strong></p><ul><li>数除法的结果应当截去（truncate）其小数部分，例如：truncate(8.345) = 8 以及 truncate(-2.7335) = -2</li><li>假设我们的环境只能存储 32 位有符号整数，其数值范围是 [<span class="math inline">\(-2^{31}\)</span>, <span class="math inline">\(2^{31}-1\)</span>]。本题中，如果除法结果溢出，则返回 <span class="math inline">\(2^{31}-1\)</span></li></ul><p><strong>示例1：</strong></p><figure class="highlight nix"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs nix">输入：<span class="hljs-attr">a</span> = <span class="hljs-number">15</span>, <span class="hljs-attr">b</span> = <span class="hljs-number">2</span><br>输出：<span class="hljs-number">7</span><br>解释：<span class="hljs-number">15</span>/<span class="hljs-number">2</span> = truncate(<span class="hljs-number">7.5</span>) = <span class="hljs-number">7</span><br></code></pre></div></td></tr></table></figure><p><strong>示例2：</strong></p><figure class="highlight subunit"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs subunit">输入：a = 7, b = <span class="hljs-string">-3</span><br>输出：<span class="hljs-string">-2</span><br>解释：7/<span class="hljs-string">-3</span> = truncate(<span class="hljs-string">-2</span>.33333..) = <span class="hljs-string">-2</span><br></code></pre></div></td></tr></table></figure><p><strong>示例3：</strong></p><figure class="highlight nix"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs nix">输入：<span class="hljs-attr">a</span> = <span class="hljs-number">0</span>, <span class="hljs-attr">b</span> = <span class="hljs-number">1</span><br>输出：<span class="hljs-number">0</span><br></code></pre></div></td></tr></table></figure><p><strong>示例4：</strong></p><figure class="highlight nix"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs nix">输入：<span class="hljs-attr">a</span> = <span class="hljs-number">1</span>, <span class="hljs-attr">b</span> = <span class="hljs-number">1</span><br>输出：<span class="hljs-number">1</span><br></code></pre></div></td></tr></table></figure><p><strong>提示：</strong></p><ul><li><span class="math inline">\(-2^{31}&lt;=a, b&lt;=2^{31}-1\)</span></li><li><span class="math inline">\(b != 0\)</span></li></ul><p>来源：力扣（LeetCode）</p><p>链接：https://leetcode-cn.com/problems/xoh6Oh</p><p>著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。</p><h1 id="解题思路">解题思路</h1><blockquote><ol type="1"><li>用减法来代替除法；</li><li>先将被除数和除数都看成负数，最后再修改结果的正负值；</li><li>考虑溢出情况。</li></ol></blockquote><blockquote><p><strong>薄弱知识点：</strong></p><ol type="1"><li>C++ 中 <code>INT_MIN</code> 和 <code>INT_MAX</code> 可直接得到整型的最小值和最大值；</li><li>灵活使用三目运算符；</li><li>32位有符号数，最大整数为<span class="math inline">\(2^{32}-1\)</span>，最小整数为<span class="math inline">\(-2^{32}\)</span>。</li><li>为什么 <code>unsigned</code> 改成 <code>int</code> 就会超时？ <code>unsigned</code> 的处理速度更快？<label style="color:red">（没搞懂）</label></li></ol></blockquote><h1 id="代码">代码</h1><figure class="highlight c++"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs c++"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Solution</span> &#123;</span><br><span class="hljs-keyword">public</span>:<br>    <span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">divide</span><span class="hljs-params">(<span class="hljs-keyword">int</span> a, <span class="hljs-keyword">int</span> b)</span> </span>&#123;<br>        <span class="hljs-keyword">if</span> (a == <span class="hljs-number">0x80000000</span> &amp;&amp; b == <span class="hljs-number">-1</span>) <span class="hljs-keyword">return</span> INT_MAX;<br>        <br>        <span class="hljs-keyword">int</span> flag = (a &gt; <span class="hljs-number">0</span>) ^ (b &gt; <span class="hljs-number">0</span>) ? <span class="hljs-number">1</span> : <span class="hljs-number">-1</span>;<br>        <span class="hljs-keyword">unsigned</span> ret = <span class="hljs-number">0</span>;<br><br>        <span class="hljs-keyword">if</span> (a &gt; <span class="hljs-number">0</span>)  a = -a;<br>        <span class="hljs-keyword">if</span> (b &gt; <span class="hljs-number">0</span>)  b = -b;<br><br>        <span class="hljs-keyword">while</span> (a &lt;= b)<br>        &#123;<br>            <span class="hljs-keyword">int</span> value = b;<br>            <span class="hljs-keyword">unsigned</span> quotient = <span class="hljs-number">1</span>;   <span class="hljs-comment">//商</span><br>            <span class="hljs-keyword">while</span> (value &gt;= <span class="hljs-number">0xc0000000</span> &amp;&amp; a &lt;= (value + value)) <br>            &#123;<br>                quotient += quotient;<br>                value += value;<br>            &#125;<br>            ret += quotient;<br>            a -= value;<br>        &#125;<br>        <span class="hljs-keyword">return</span> flag==<span class="hljs-number">1</span> ? -ret : ret;<br>    &#125;<br>&#125;;<br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>力扣</category>
      
      <category>剑指offer（专项突破版）</category>
      
    </categories>
    
    
    <tags>
      
      <tag>力扣</tag>
      
      <tag>整数</tag>
      
      <tag>简单</tag>
      
      <tag>位运算</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>爬虫</title>
    <link href="/2021/10/19/%E7%88%AC%E8%99%AB/"/>
    <url>/2021/10/19/%E7%88%AC%E8%99%AB/</url>
    
    <content type="html"><![CDATA[<h1 id="相关知识">相关知识</h1><blockquote><p>网页渲染过程</p></blockquote><p>​ 对于异步加载数据的网页（先加载网页框架，数据后续发送请求）</p><p><img src="https://gitee.com/zengyuqin/drawing-bed/raw/master/img/image-20211014202449192.png" alt="image-20211014202449192" style="zoom: 80%;" /></p><blockquote><p>HTTP协议</p></blockquote><ul><li><p>请求</p><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python">请求行 -&gt; 请求方式(get/post)、请求url地址、协议<br>请求头 -&gt; 放一些服务器要使用的附加信息(如：请求从哪里来、对返回的数据有什么要求)<br>请求体 -&gt; 放请求的参数<br></code></pre></div></td></tr></table></figure></li></ul><span id="more"></span><ul><li><p>响应</p><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python">状态行 -&gt; 协议、状态码(<span class="hljs-number">404</span>、<span class="hljs-number">200</span>、<span class="hljs-number">500</span>等)<br>响应头 -&gt; 放一些客户端要使用的附加信息(如：密钥、cookie)<br>响应体 -&gt; 服务器返回给客户端要使用的内容(HTML、json等)<br></code></pre></div></td></tr></table></figure><p><img src="https://gitee.com/zengyuqin/drawing-bed/raw/master/img/image-20211014203754875.png" alt="image-20211014203754875" style="zoom: 80%;" /></p></li><li><p>请求头中常见的一些重要的内容（爬虫需要）：</p><ol type="1"><li>User-Agent：请求载体的身份标识（用什么发送的请求）</li><li>Referer：防盗链（这次请求时从哪个页面来的？反爬虫会用到）</li><li>cookie：本地字符串数据信息（用户登录信息，反爬的token）</li></ol><p><img src="https://gitee.com/zengyuqin/drawing-bed/raw/master/img/image-20211014204432009.png" alt="image-20211014204432009" style="zoom: 80%;" /></p></li><li><p>请求方式:</p><ul><li>GET：查询的时候</li><li>POST：修改数据的时候</li></ul></li></ul><h1 id="requests">requests</h1><blockquote><p>安装第三方库</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">pip install requests<br></code></pre></div></td></tr></table></figure><blockquote><p>案例一：搜狗搜索案例</p></blockquote><p>​ ==程序被拦截、GET==</p><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-keyword">import</span> requests<br><br>url = <span class="hljs-string">&quot;https://www.sogou.com/web?query=周杰伦&quot;</span><br><span class="hljs-comment"># 地址栏传参数均为GET请求</span><br>resp = requests.get(url)<br><span class="hljs-built_in">print</span>(resp.text)    <span class="hljs-comment"># 拿到页面源代码</span><br>resp.close()<br></code></pre></div></td></tr></table></figure><p>​ 此时输出：</p><p><img src="https://gitee.com/zengyuqin/drawing-bed/raw/master/img/image-20211014205909602.png" alt="image-20211014205909602" style="zoom:80%;" /></p><p>​ 因此，需要伪装成浏览器访问，伪装user-agent</p><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-keyword">import</span> requests<br>query = <span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;输入一个你喜欢的明星：&quot;</span>)<br>url = <span class="hljs-string">f&quot;https://www.sogou.com/web?query=<span class="hljs-subst">&#123;query&#125;</span>&quot;</span><br>dic = &#123;<br>    <span class="hljs-string">&quot;user-agent&quot;</span>: <span class="hljs-string">&quot;Mozilla/5.0 *****(这部分去浏览器里面复制过来)&quot;</span><br>&#125;<br>resp = requests.get(url, headers=dic)<br><span class="hljs-built_in">print</span>(resp.text)    <span class="hljs-comment"># 拿到页面源代码</span><br>resp.close()<br></code></pre></div></td></tr></table></figure><blockquote><p>案例二：百度翻译</p></blockquote><p>==POST==</p><p>​ post请求传参数需要通过表单数据</p><p><img src="https://gitee.com/zengyuqin/drawing-bed/raw/master/img/image-20211014211212979.png" alt="image-20211014211212979" style="zoom: 80%;" /></p><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-keyword">import</span> requests<br><br>url = <span class="hljs-string">&quot;https://fanyi.baidu.com/sug&quot;</span><br>s = <span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;请输入你要翻译的英文单词：&quot;</span>)<br>dat = &#123;<br>    <span class="hljs-string">&quot;kw&quot;</span>: s<br>&#125;<br><span class="hljs-comment"># 发送post请求，发送的数据必须放在字典中，通过data参数进行传递</span><br>resp = requests.post(url, data=dat)<br><span class="hljs-built_in">print</span>(resp.json())  <span class="hljs-comment"># 将服务器返回的内容直接处理成json()</span><br>resp.close()<br></code></pre></div></td></tr></table></figure><p><img src="https://gitee.com/zengyuqin/drawing-bed/raw/master/img/image-20211014220343589.png" alt="image-20211014220343589" style="zoom: 80%;" /></p><blockquote><p>案例三：</p></blockquote><p>​ ==GET请求地址很长，需重新封装参数==</p><p><img src="https://gitee.com/zengyuqin/drawing-bed/raw/master/img/image-20211014220847958.png" alt="image-20211014220847958" style="zoom: 80%;" /></p><p>​ 发现没任何结果，而参数等都没问题，则被反爬了。通过打印user-agent发现不是模拟的浏览器。</p><figure><img src="https://gitee.com/zengyuqin/drawing-bed/raw/master/img/image-20211014221432711.png" alt="image-20211014221432711" /><figcaption aria-hidden="true">image-20211014221432711</figcaption></figure><figure><img src="https://gitee.com/zengyuqin/drawing-bed/raw/master/img/image-20211014221650940.png" alt="image-20211014221650940" /><figcaption aria-hidden="true">image-20211014221650940</figcaption></figure><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-keyword">import</span> requests<br><br>url =<span class="hljs-string">&quot;https://movie.douban.com/j/chart/top_list&quot;</span><br><span class="hljs-comment"># 重新封装参数</span><br>param = &#123;<br>    <span class="hljs-string">&quot;type&quot;</span>: <span class="hljs-string">&quot;24&quot;</span>,<br>    <span class="hljs-string">&quot;interval_id&quot;</span>: <span class="hljs-string">&quot;100:90&quot;</span>,<br>    <span class="hljs-string">&quot;action&quot;</span>: <span class="hljs-string">&quot;&quot;</span>,<br>    <span class="hljs-string">&quot;start&quot;</span>: <span class="hljs-number">0</span>,<br>    <span class="hljs-string">&quot;limit&quot;</span>: <span class="hljs-number">20</span><br>&#125;<br><span class="hljs-comment"># 修改user-agent</span><br>headers = &#123;<br>    <span class="hljs-string">&#x27;User-Agent&#x27;</span>: <span class="hljs-string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/94.0.4606.81 Safari/537.36 Edg/94.0.992.47&#x27;</span>, <span class="hljs-string">&#x27;Accept-Encoding&#x27;</span>: <span class="hljs-string">&#x27;gzip, deflate&#x27;</span>, <span class="hljs-string">&#x27;Accept&#x27;</span>: <span class="hljs-string">&#x27;*/*&#x27;</span>, <span class="hljs-string">&#x27;Connection&#x27;</span>: <span class="hljs-string">&#x27;keep-alive&#x27;</span><br>&#125;<br>resp = requests.get(url=url, params=param, headers=headers)<br><span class="hljs-built_in">print</span>(resp.json())<br>resp.close()<br></code></pre></div></td></tr></table></figure><h1 id="数据解析">数据解析</h1><p>​ 大多数情况下，我们并不需要整个网页的内容，而只需要一小部分内容（某个标签内的内容）。</p><p>​ 数据解析的三种方式：</p><ol type="1"><li><p>re解析</p></li><li><p>bs4解析</p></li><li><p>xpath解析</p><p>这三种方式可以混合使用，以结果做导向。只要能拿到想要的数据，用什么方式不重要。掌握之后再考虑性能的问题。</p></li></ol><h2 id="re模块">re模块</h2><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-keyword">import</span> re<br></code></pre></div></td></tr></table></figure><ul><li><p>findall()</p><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-comment"># findall: 匹配字符串中所有的符合正则的内容。</span><br><span class="hljs-comment"># 由于网页中内容很多，所以返回list效率低</span><br><span class="hljs-comment"># 字符串前加r：表示一个普通的字符串，去掉反斜杠的转义机制</span><br>lst = re.findall(<span class="hljs-string">r&quot;\d+&quot;</span>, <span class="hljs-string">&quot;我的电话号码是：10086，他的电话号码是：10010&quot;</span>)<br><span class="hljs-built_in">print</span>(lst)<br><br><span class="hljs-comment"># 输出结果</span><br>[<span class="hljs-string">&#x27;10086&#x27;</span>, <span class="hljs-string">&#x27;10010&#x27;</span>]<br></code></pre></div></td></tr></table></figure></li><li><p>finditer()</p><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-comment"># finditer: 匹配字符串中所有的内容（返回的是迭代器），从迭代器中拿内容需要.group()</span><br>it = re.finditer(<span class="hljs-string">r&quot;\d+&quot;</span>, <span class="hljs-string">&quot;我的电话号码是：10086，他的电话号码是：10010&quot;</span>)<br><span class="hljs-built_in">print</span>(it)<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> it:<br>    <span class="hljs-built_in">print</span>(i.group())<br>    <br><span class="hljs-comment"># 输出结果</span><br>&lt;callable_iterator <span class="hljs-built_in">object</span> at <span class="hljs-number">0x0000020CDAB925B0</span>&gt;<br><span class="hljs-number">10086</span><br><span class="hljs-number">10010</span><br></code></pre></div></td></tr></table></figure></li><li><p>search()</p><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-comment"># search返回的是match对象，拿数据需要.group()</span><br>s = re.search(<span class="hljs-string">r&quot;\d+&quot;</span>, <span class="hljs-string">&quot;我的电话号码是：10086，他的电话号码是：10010&quot;</span>)<br><span class="hljs-built_in">print</span>(s)<br><span class="hljs-built_in">print</span>(s.group())<br><br><span class="hljs-comment"># 输出结果，特点：找到结果就返回</span><br>&lt;re.Match <span class="hljs-built_in">object</span>; span=(<span class="hljs-number">8</span>, <span class="hljs-number">13</span>), match=<span class="hljs-string">&#x27;10086&#x27;</span>&gt;<br><span class="hljs-number">10086</span><br></code></pre></div></td></tr></table></figure></li><li><p>match()</p><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-comment"># match是从头开始匹配</span><br>s = re.match(<span class="hljs-string">r&quot;\d+&quot;</span>, <span class="hljs-string">&quot;10086，他的电话号码是：10010&quot;</span>)<br><span class="hljs-built_in">print</span>(s)<br><span class="hljs-built_in">print</span>(s.group())<br><br><span class="hljs-comment"># 输出结果</span><br>&lt;re.Match <span class="hljs-built_in">object</span>; span=(<span class="hljs-number">0</span>, <span class="hljs-number">5</span>), match=<span class="hljs-string">&#x27;10086&#x27;</span>&gt;<br><span class="hljs-number">10086</span><br></code></pre></div></td></tr></table></figure></li><li><p>预加载正则表达式</p><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-comment"># 预加载正则表达式，在表达式很长的时候可以提高一点效率；并且可以反复使用。</span><br>obj = re.<span class="hljs-built_in">compile</span>(<span class="hljs-string">r&quot;\d+&quot;</span>)<br>obj.match(<span class="hljs-string">&quot;10086，他的电话号码是：10010&quot;</span>)<br><span class="hljs-built_in">print</span>(s.group())<br><br><span class="hljs-comment"># 输出结果</span><br><span class="hljs-number">10086</span><br></code></pre></div></td></tr></table></figure></li><li><p>正则中的内如何单独提取？</p><p>单独获取到正则中的具体内容可以给分组起名字</p><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python">s = <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">&lt;div class=&#x27;xiyouji&#x27;&gt;&lt;span id=&#x27;1&#x27;&gt;孙悟空&lt;/span&gt;&lt;/div&gt;</span><br><span class="hljs-string">&lt;div class=&#x27;shuihuzhuan&#x27;&gt;&lt;span id=&#x27;2&#x27;&gt;武松&lt;/span&gt;&lt;/div&gt;</span><br><span class="hljs-string">&lt;div class=&#x27;sanguoyanyi&#x27;&gt;&lt;span id=&#x27;3&#x27;&gt;诸葛亮&lt;/span&gt;&lt;/div&gt;</span><br><span class="hljs-string">&lt;div class=&#x27;hongloumeng&#x27;&gt;&lt;span id=&#x27;4&#x27;&gt;贾宝玉&lt;/span&gt;&lt;/div&gt;</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-comment"># re.S 能让.匹配换行符</span><br><span class="hljs-comment"># (?P&lt;分组名称&gt;正则表达式) 可单独从正则匹配的内容中进一步提取内容</span><br><span class="hljs-comment"># (?P&lt;name&gt;.*?)将.*?匹配到的内容放到一个名称为name的组中，可通过组名name取到其中的值</span><br>obj = re.<span class="hljs-built_in">compile</span>(<span class="hljs-string">r&quot;&lt;div class=&#x27;.*?&#x27;&gt;&lt;span id=&#x27;(?P&lt;id&gt;\d+)&#x27;&gt;(?P&lt;name&gt;.*?)&lt;/span&gt;&lt;/div&gt;&quot;</span>, re.S)<br>result = obj.finditer(s)<br><span class="hljs-keyword">for</span> it <span class="hljs-keyword">in</span> result:<br>    <span class="hljs-built_in">print</span>(it.group())<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;第&quot;</span> + it.group(<span class="hljs-string">&quot;id&quot;</span>) + <span class="hljs-string">&quot;行的内容是：&quot;</span> + it.group(<span class="hljs-string">&quot;name&quot;</span>))<br>    <br>    <br><span class="hljs-comment"># 输出结果</span><br>&lt;div <span class="hljs-class"><span class="hljs-keyword">class</span>=&#x27;<span class="hljs-title">xiyouji</span>&#x27;&gt;&lt;<span class="hljs-title">span</span> <span class="hljs-title">id</span>=&#x27;1&#x27;&gt;孙悟空&lt;/<span class="hljs-title">span</span>&gt;&lt;/<span class="hljs-title">div</span>&gt;</span><br><span class="hljs-class">第1行的内容是：孙悟空</span><br><span class="hljs-class">&lt;<span class="hljs-title">div</span> <span class="hljs-title">class</span>=&#x27;<span class="hljs-title">shuihuzhuan</span>&#x27;&gt;&lt;<span class="hljs-title">span</span> <span class="hljs-title">id</span>=&#x27;2&#x27;&gt;武松&lt;/<span class="hljs-title">span</span>&gt;&lt;/<span class="hljs-title">div</span>&gt;</span><br><span class="hljs-class">第2行的内容是：武松</span><br><span class="hljs-class">&lt;<span class="hljs-title">div</span> <span class="hljs-title">class</span>=&#x27;<span class="hljs-title">sanguoyanyi</span>&#x27;&gt;&lt;<span class="hljs-title">span</span> <span class="hljs-title">id</span>=&#x27;3&#x27;&gt;诸葛亮&lt;/<span class="hljs-title">span</span>&gt;&lt;/<span class="hljs-title">div</span>&gt;</span><br><span class="hljs-class">第3行的内容是：诸葛亮</span><br><span class="hljs-class">&lt;<span class="hljs-title">div</span> <span class="hljs-title">class</span>=&#x27;<span class="hljs-title">hongloumeng</span>&#x27;&gt;&lt;<span class="hljs-title">span</span> <span class="hljs-title">id</span>=&#x27;4&#x27;&gt;贾宝玉&lt;/<span class="hljs-title">span</span>&gt;&lt;/<span class="hljs-title">div</span>&gt;</span><br><span class="hljs-class">第4行的内容是：贾宝玉</span><br></code></pre></div></td></tr></table></figure></li></ul><h3 id="案例豆瓣排行榜">案例:豆瓣排行榜</h3><p><img src="https://gitee.com/zengyuqin/drawing-bed/raw/master/img/image-20211016141911900.png" alt="image-20211016141911900" style="zoom:50%;" /></p><ul><li><p>分析</p><p>通过查找发现，排名信息以及在源码里面了，所以直接通过正则表达式从源代码里面抓取数据即可。</p><p><img src="https://gitee.com/zengyuqin/drawing-bed/raw/master/img/image-20211016142058441.png" alt="image-20211016142058441" style="zoom: 80%;" /></p></li><li><p>操作</p><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">import</span> re<br><span class="hljs-keyword">import</span> csv<br><br>url = <span class="hljs-string">&quot;https://movie.douban.com/top250&quot;</span><br>resp = requests.get(url)<br>headers = &#123;<br>    <span class="hljs-string">&quot;user-agent&quot;</span>: <span class="hljs-string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/94.0.4606.81 Safari/537.36 Edg/94.0.992.50&quot;</span><br>&#125;<br>resp = requests.get(url, headers=headers)<br>page_content = resp.text<br><br><span class="hljs-comment"># 解析数据</span><br>obj = re.<span class="hljs-built_in">compile</span>(<br>    <span class="hljs-string">r&#x27;&lt;li&gt;.*?&lt;div class=&quot;item&quot;&gt;.*?&lt;span class=&quot;title&quot;&gt;(?P&lt;name&gt;.*?)&lt;/span&gt;.*?&#x27;</span><br>    <span class="hljs-string">r&#x27;&lt;p class=&quot;&quot;&gt;.*?&lt;br&gt;(?P&lt;year&gt;.*?)&amp;nbsp.*?&lt;/p&gt;.*?&lt;span class=&quot;rating_num&quot; &#x27;</span><br>    <span class="hljs-string">r&#x27;property=&quot;v:average&quot;&gt;(?P&lt;star&gt;.*?)&lt;/span&gt;.*?&lt;span&gt;(?P&lt;number&gt;.*?)人评价&#x27;</span>,<br>    re.S)<br><br><span class="hljs-comment"># 开始匹配</span><br>result = obj.finditer(page_content)<br>f = <span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;data.csv&quot;</span>, mode=<span class="hljs-string">&quot;w&quot;</span>,encoding=<span class="hljs-string">&quot;utf-8&quot;</span>)<br>csvwriter = csv.writer(f)<br><span class="hljs-keyword">for</span> it <span class="hljs-keyword">in</span> result:<br>    <span class="hljs-comment"># 将数据放到字典中，再写入文件</span><br>    dic = it.groupdict()<br>    dic[<span class="hljs-string">&#x27;year&#x27;</span>] = dic[<span class="hljs-string">&#x27;year&#x27;</span>].strip()<br>    csvwriter.writerow(dic.values())<br>f.close()<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;---------over-------&quot;</span>)<br></code></pre></div></td></tr></table></figure><p><img src="https://gitee.com/zengyuqin/drawing-bed/raw/master/img/image-20211016154436370.png" alt="image-20211016154436370" style="zoom: 80%;" /></p></li><li><p>注意</p><ol type="1"><li>如果出现下图所示问题，说明网站有一些加密措施，只需加个 <code>verify=False</code> 即可。</li></ol><figure><img src="https://gitee.com/zengyuqin/drawing-bed/raw/master/img/image-20211016155342044.png" alt="image-20211016155342044" /><figcaption aria-hidden="true">image-20211016155342044</figcaption></figure><p><img src="https://gitee.com/zengyuqin/drawing-bed/raw/master/img/image-20211016155447642.png" alt="image-20211016155447642" style="zoom:80%;" /></p><ol start="2" type="1"><li><p>如果出现乱码，可以看看 <code>meta</code> 标签中的编码格式。</p><p><img src="https://gitee.com/zengyuqin/drawing-bed/raw/master/img/image-20211016155634251.png" alt="image-20211016155634251" style="zoom:80%;" /></p></li></ol></li></ul><p><img src="https://gitee.com/zengyuqin/drawing-bed/raw/master/img/image-20211016155715906.png" alt="image-20211016155715906" style="zoom:80%;" /></p><h2 id="bs4解析">Bs4解析</h2><p><code>Beautiful Soup 4</code></p><ul><li><p>安装</p><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python">pip install bs4<br></code></pre></div></td></tr></table></figure></li><li><p>案例一</p><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">from</span> bs4 <span class="hljs-keyword">import</span> BeautifulSoup<br><span class="hljs-keyword">import</span> csv<br><br>url = <span class="hljs-string">&quot;http://www.xinfadi.com.cn/index.html&quot;</span><br>resp = requests.get(url)<br>f = <span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;新闻.csv&quot;</span>, mode=<span class="hljs-string">&quot;w&quot;</span>, encoding=<span class="hljs-string">&quot;utf-8&quot;</span>)<br>csvwriter = csv.writer(f)<br><br><span class="hljs-comment"># 解析数据</span><br><span class="hljs-comment"># 把页面源代码交给BeautifulSoup进行除了，生成bs对象</span><br>page = BeautifulSoup(resp.text, <span class="hljs-string">&quot;html.parser&quot;</span>)  <span class="hljs-comment"># 第二个参数指定解析的是html</span><br><span class="hljs-comment"># 从bs对象中查找数据    1.find(标签,属性=...)  2.find_all(标签,属性=...)</span><br><span class="hljs-comment"># 找 class=news 并且 id=news 的 div</span><br>div = page.find(<span class="hljs-string">&quot;div&quot;</span>, attrs=&#123;<span class="hljs-string">&quot;class&quot;</span>: <span class="hljs-string">&quot;news&quot;</span>, <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-string">&quot;news&quot;</span>&#125;)<br>news = div.find_all(<span class="hljs-string">&quot;span&quot;</span>)<br><span class="hljs-keyword">for</span> new <span class="hljs-keyword">in</span> news:<br>    <span class="hljs-comment"># 拿到span标签内的内容，写入文件</span><br>    csvwriter.writerow(new.text)<br>    <span class="hljs-built_in">print</span>(new.text)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;---over---&quot;</span>)<br></code></pre></div></td></tr></table></figure></li><li><p>案例二</p><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-keyword">from</span> bs4 <span class="hljs-keyword">import</span> BeautifulSoup<br><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">import</span> time<br><br><span class="hljs-comment"># 拿到主页面的源代码，然后提取到子页面的链接地址</span><br>url = <span class="hljs-string">&quot;https://www.umei.cc/meinvtupian/&quot;</span><br>resp = requests.get(url)<br>resp.encoding = <span class="hljs-string">&quot;utf-8&quot;</span><br><br>page = BeautifulSoup(resp.text, <span class="hljs-string">&quot;html.parser&quot;</span>)<br>a = page.find(<span class="hljs-string">&quot;div&quot;</span>, attrs=&#123;<span class="hljs-string">&quot;class&quot;</span>: <span class="hljs-string">&quot;TypeList&quot;</span>&#125;).find_all(<span class="hljs-string">&quot;a&quot;</span>)<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> a:<br>    href = <span class="hljs-string">&quot;https://www.umei.cc&quot;</span> + i.get(<span class="hljs-string">&quot;href&quot;</span>)<br>    <span class="hljs-comment"># 通过href拿到子页面的内容，从子页面中找到图片的下载地址</span><br>    child_page_resp = requests.get(href)<br>    child_page_resp.encoding = <span class="hljs-string">&quot;utf-8&quot;</span><br>    child_page_text = child_page_resp.text<br>    child_page = BeautifulSoup(child_page_text, <span class="hljs-string">&quot;html.parser&quot;</span>)<br>    imgs = child_page.find(<span class="hljs-string">&quot;div&quot;</span>, attrs=&#123;<span class="hljs-string">&quot;class&quot;</span>: <span class="hljs-string">&quot;relax-arc&quot;</span>&#125;).find_all(<span class="hljs-string">&quot;img&quot;</span>)<br>    <span class="hljs-keyword">for</span> img <span class="hljs-keyword">in</span> imgs:<br>        src = img.get(<span class="hljs-string">&quot;src&quot;</span>)<br>        title = img.get(<span class="hljs-string">&quot;title&quot;</span>)<br>        <span class="hljs-comment"># 下载图片</span><br>        img_resp = requests.get(src)<br><br>        <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;imgs/&quot;</span> + title + <span class="hljs-string">&quot;.png&quot;</span>, mode=<span class="hljs-string">&quot;wb&quot;</span>) <span class="hljs-keyword">as</span> f:<br>            f.write(img_resp.content)   <span class="hljs-comment"># 图片内容写入文件，这里拿到的是字节</span><br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;--over---&quot;</span>, title)<br>        time.sleep(<span class="hljs-number">1</span>)   <span class="hljs-comment"># 防止频繁访问被服务器干掉，下一张图片后休息一下</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;====all over====&quot;</span>)<br></code></pre></div></td></tr></table></figure></li></ul>]]></content>
    
    
    <categories>
      
      <category>爬虫</category>
      
    </categories>
    
    
    <tags>
      
      <tag>爬虫</tag>
      
      <tag>python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Docker安装</title>
    <link href="/2021/08/01/Docker/"/>
    <url>/2021/08/01/Docker/</url>
    
    <content type="html"><![CDATA[<p>环境：CentOS 7</p><ol type="1"><li><p>先卸载原有的docker</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">sudo yum remove docker \<br>                  docker-client \<br>                  docker-client-latest \<br>                  docker-common \<br>                  docker-latest \<br>               docker-latest-logrotate \<br>                  docker-logrotate \<br>               docker-engine<br></code></pre></div></td></tr></table></figure></li><li><p>通过仓库安装</p><figure class="highlight sh"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs sh">sudo yum install -y yum-utils<br></code></pre></div></td></tr></table></figure><!-- more --></li><li><p>设置阿里云镜像的仓库</p><figure class="highlight sh"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs sh">sudo yum-config-manager \<br>    --add-repo \<br>http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo<br></code></pre></div></td></tr></table></figure></li><li><p>更新软件包索引</p><figure class="highlight sh"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs sh">yum makecache fast<br></code></pre></div></td></tr></table></figure></li><li><p>安装docker</p><figure class="highlight sh"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs sh">sudo yum install docker-ce docker-ce-cli containerd.io<br></code></pre></div></td></tr></table></figure></li><li><p>启动docker</p><figure class="highlight sh"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs sh">sudo systemctl start docker<br></code></pre></div></td></tr></table></figure></li><li><p>验证1（查看版本）</p><figure class="highlight sh"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs sh">docker version<br></code></pre></div></td></tr></table></figure><figure><img src="https://gitee.com/zengyuqin/drawing-bed/raw/master/img/image-20210801112723327.png" alt="image-20210801112723327" /><figcaption aria-hidden="true">image-20210801112723327</figcaption></figure></li><li><p>验证2（测试hello-world）</p><figure class="highlight sh"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs sh">sudo docker run hello-world<br></code></pre></div></td></tr></table></figure><figure><img src="https://gitee.com/zengyuqin/drawing-bed/raw/master/img/image-20210801112901242.png" alt="image-20210801112901242" /><figcaption aria-hidden="true">image-20210801112901242</figcaption></figure></li></ol><p>了解：</p><ol type="1"><li><p>查看镜像</p><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">docker images<br></code></pre></div></td></tr></table></figure></li><li><p>卸载docker</p><p><figure class="highlight sh"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs sh"><span class="hljs-comment"># 1、卸载依赖</span><br>sudo yum remove docker-ce docker-ce-cli containerd.io<br><span class="hljs-comment"># 2、删除资源</span><br>sudo rm -rf /var/lib/docker<br>sudo rm -rf /var/lib/containerd<br></code></pre></div></td></tr></table></figure></p></li></ol>]]></content>
    
    
    <categories>
      
      <category>安装</category>
      
    </categories>
    
    
    <tags>
      
      <tag>docker</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>原生安卓开发</title>
    <link href="/2021/03/10/%E5%8E%9F%E7%94%9F%E5%AE%89%E5%8D%93%E5%BC%80%E5%8F%91/"/>
    <url>/2021/03/10/%E5%8E%9F%E7%94%9F%E5%AE%89%E5%8D%93%E5%BC%80%E5%8F%91/</url>
    
    <content type="html"><![CDATA[<h1 id="安卓开发">安卓开发</h1><h2 id="常见布局">常见布局</h2><ul><li>线性布局 <code>LinearLayout</code></li></ul><p>如果使用了权重，通常设元素宽度为0，否则会冲突以width为主。</p><p><img src="https://gitee.com/zengyuqin/drawing-bed/raw/master/img/image-20210430133850330.png" alt="image-20210430133850330" style="zoom:67%;" /></p><ul><li><p>相对布局 <code>RelativeLayout</code></p><p><img src="https://img-blog.csdnimg.cn/20210509214857186.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMTIxMTEz,size_16,color_FFFFFF,t_70" alt="image-20210430150510778" style="zoom:50%;" /></p></li><li><p>表格布局 <code>TableLayout</code></p></li><li><p>帧布局 <code>FrameLayout</code></p></li></ul><h2 id="常用控件">常用控件</h2><h3 id="textview">TextView</h3><p><img src="https://gitee.com/zengyuqin/drawing-bed/raw/master/img/image-20210430145643457.png" alt="image-20210430145643457" style="zoom:67%;" /><img src="https://gitee.com/zengyuqin/drawing-bed/raw/master/img/image-20210430145700244.png" alt="image-20210430145700244" style="zoom:67%;" /><img src="https://gitee.com/zengyuqin/drawing-bed/raw/master/img/image-20210430145815907.png" alt="image-20210430145815907" /></p><h3 id="button">Button</h3><ul><li><p>点击事件写法Ⅰ</p><p>​ 通过按钮的onClick指定点击事件出发的方法，方法在对应的activity中实现。</p><p><img src="https://gitee.com/zengyuqin/drawing-bed/raw/master/img/image-20210430151833275.png" alt="image-20210430151833275" style="zoom:67%;" /></p></li><li><p>点击事件写法Ⅱ</p><p>​ 通过匿名内部类的方式是实现。</p><figure><img src="https://gitee.com/zengyuqin/drawing-bed/raw/master/img/image-20210430152558030.png" alt="image-20210430152558030" /><figcaption aria-hidden="true">image-20210430152558030</figcaption></figure></li></ul><h3 id="imageview">ImageView</h3><p><img src="https://gitee.com/zengyuqin/drawing-bed/raw/master/img/image-20210430153313815.png" alt="image-20210430153313815" style="zoom:50%;" /></p><h3 id="editview">EditView</h3><p><img src="https://gitee.com/zengyuqin/drawing-bed/raw/master/img/image-20210430153805905.png" alt="image-20210430153805905" style="zoom:50%;" /></p><h3 id="toast">Toast</h3><figure><img src="https://gitee.com/zengyuqin/drawing-bed/raw/master/img/image-20210430155711173.png" alt="image-20210430155711173" /><figcaption aria-hidden="true">image-20210430155711173</figcaption></figure><h3 id="checkbox">CheckBox</h3><p><img src="https://gitee.com/zengyuqin/drawing-bed/raw/master/img/image-20210430163741310.png" alt="image-20210430163741310" style="zoom:67%;" /></p><figure class="highlight java"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.example.hellp.activitys;<br><br><span class="hljs-keyword">import</span> android.os.Bundle;<br><span class="hljs-keyword">import</span> android.widget.CheckBox;<br><span class="hljs-keyword">import</span> android.widget.CompoundButton;<br><span class="hljs-keyword">import</span> android.widget.Toast;<br><br><span class="hljs-keyword">import</span> androidx.appcompat.app.AppCompatActivity;<br><br><span class="hljs-keyword">import</span> com.example.hellp.R;<br><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">MainActivity</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">AppCompatActivity</span> </span>&#123;<br><br>    <span class="hljs-keyword">private</span> CheckBox cb1, cb2, cb3;<br>    <span class="hljs-keyword">private</span> String hobbies;<br>    <span class="hljs-keyword">private</span> String msg1, msg2, msg3;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-function"><span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title">onCreate</span><span class="hljs-params">(Bundle savedInstanceState)</span> </span>&#123;<br>        <span class="hljs-keyword">super</span>.onCreate(savedInstanceState);<br>        setContentView(R.layout.activity_main2);<br>        initView();<br>        setView();<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title">setView</span><span class="hljs-params">()</span> </span>&#123;<br>        <span class="hljs-comment">//监听器</span><br>        CompoundButton.OnCheckedChangeListener occl = <span class="hljs-keyword">new</span> CompoundButton.OnCheckedChangeListener() &#123;<br>            <span class="hljs-meta">@Override</span><br>            <span class="hljs-comment">//buttonView传递的是checkBox对象，isChecked传递的是是否被选中</span><br>            <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">onCheckedChanged</span><span class="hljs-params">(CompoundButton buttonView, <span class="hljs-keyword">boolean</span> isChecked)</span> </span>&#123;<br>                <span class="hljs-keyword">if</span> (buttonView.getId()==R.id.cb1)&#123;<br>                    <span class="hljs-keyword">if</span> (isChecked)&#123;<br>                        msg1 = buttonView.getText().toString();<br>                    &#125;<span class="hljs-keyword">else</span> &#123;<br>                        msg1 = <span class="hljs-string">&quot;&quot;</span>;<br>                    &#125;<br>                &#125;<br>                <span class="hljs-keyword">if</span> (buttonView.getId()==R.id.cb2)&#123;<br>                    <span class="hljs-keyword">if</span> (isChecked)&#123;<br>                        msg2 = buttonView.getText().toString();<br>                    &#125;<span class="hljs-keyword">else</span> &#123;<br>                        msg2 = <span class="hljs-string">&quot;&quot;</span>;<br>                    &#125;<br>                &#125;<br>                <span class="hljs-keyword">if</span> (buttonView.getId()==R.id.cb3)&#123;<br>                    <span class="hljs-keyword">if</span> (isChecked)&#123;<br>                        msg3 = buttonView.getText().toString();<br>                    &#125;<span class="hljs-keyword">else</span> &#123;<br>                        msg3 = <span class="hljs-string">&quot;&quot;</span>;<br>                    &#125;<br>                &#125;<br><br>                Toast.makeText(MainActivity.<span class="hljs-keyword">this</span>, msg1+msg2+msg3, Toast.LENGTH_SHORT).show();<br>            &#125;<br>        &#125;;<br><br>        cb1.setOnCheckedChangeListener(occl);<br>        cb2.setOnCheckedChangeListener(occl);<br>        cb3.setOnCheckedChangeListener(occl);<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title">initView</span><span class="hljs-params">()</span> </span>&#123;<br>        cb1 = findViewById(R.id.cb1);<br>        cb2 = findViewById(R.id.cb2);<br>        cb3 = findViewById(R.id.cb3);<br>    &#125;<br>&#125;<br></code></pre></div></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">LinearLayout</span> <span class="hljs-attr">xmlns:android</span>=<span class="hljs-string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">xmlns:app</span>=<span class="hljs-string">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">xmlns:tools</span>=<span class="hljs-string">&quot;http://schemas.android.com/tools&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">&quot;match_parent&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">&quot;match_parent&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">tools:context</span>=<span class="hljs-string">&quot;.activitys.MainActivity&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">android:gravity</span>=<span class="hljs-string">&quot;center_horizontal&quot;</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">TextView</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">&quot;wrap_content&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">&quot;wrap_content&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:text</span>=<span class="hljs-string">&quot;爱好&quot;</span>/&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">CheckBox</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:id</span>=<span class="hljs-string">&quot;@+id/cb1&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">&quot;wrap_content&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">&quot;wrap_content&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:text</span>=<span class="hljs-string">&quot;游泳&quot;</span>/&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">CheckBox</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:id</span>=<span class="hljs-string">&quot;@+id/cb2&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">&quot;wrap_content&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">&quot;wrap_content&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:text</span>=<span class="hljs-string">&quot;唱歌&quot;</span>/&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">CheckBox</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:id</span>=<span class="hljs-string">&quot;@+id/cb3&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">&quot;wrap_content&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">&quot;wrap_content&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:text</span>=<span class="hljs-string">&quot;跳舞&quot;</span>/&gt;</span><br><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">LinearLayout</span>&gt;</span><br></code></pre></div></td></tr></table></figure><ul><li>AlertDialog对话框</li></ul><p><img src="https://gitee.com/zengyuqin/drawing-bed/raw/master/img/image-20210430163846179.png" alt="image-20210430163846179" style="zoom:50%;" /></p><ul><li>带【确定】【取消】按钮的对话框</li></ul><p><img src="https://gitee.com/zengyuqin/drawing-bed/raw/master/img/image-20210501095548529.png" alt="image-20210501095548529" style="zoom:67%;" /></p><figure class="highlight java"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.example.hellp.activitys;<br><br><span class="hljs-keyword">import</span> android.app.AlertDialog;<br><span class="hljs-keyword">import</span> android.content.DialogInterface;<br><span class="hljs-keyword">import</span> android.os.Bundle;<br><span class="hljs-keyword">import</span> android.view.View;<br><span class="hljs-keyword">import</span> android.widget.Button;<br><br><span class="hljs-keyword">import</span> androidx.appcompat.app.AppCompatActivity;<br><br><span class="hljs-keyword">import</span> com.example.hellp.R;<br><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">MainActivity</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">AppCompatActivity</span> </span>&#123;<br><br>    <span class="hljs-keyword">private</span> Button btn;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-function"><span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title">onCreate</span><span class="hljs-params">(Bundle savedInstanceState)</span> </span>&#123;<br>        <span class="hljs-keyword">super</span>.onCreate(savedInstanceState);<br>        setContentView(R.layout.activity_main2);<br>        initView();<br>        setView();<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title">setView</span><span class="hljs-params">()</span> </span>&#123;<br>       btn.setOnClickListener(<span class="hljs-keyword">new</span> View.OnClickListener() &#123;<br>           <span class="hljs-comment">//点击按钮弹出一个对话框</span><br>           <span class="hljs-meta">@Override</span><br>           <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">onClick</span><span class="hljs-params">(View v)</span> </span>&#123;<br>               <span class="hljs-comment">//1、创建对话框的builder对象</span><br>               AlertDialog.Builder builder = <span class="hljs-keyword">new</span> AlertDialog.Builder(MainActivity.<span class="hljs-keyword">this</span>);<br>               <span class="hljs-comment">//2、该对象用于构建一个对话框模板</span><br>               builder.setIcon(R.mipmap.ic_launcher)<br>                       .setTitle(<span class="hljs-string">&quot;退出！&quot;</span>)<br>                       .setMessage(<span class="hljs-string">&quot;确定要推出吗？再玩会儿？&quot;</span>)<br>                       .setPositiveButton(<span class="hljs-string">&quot;确定&quot;</span>, <span class="hljs-keyword">new</span> DialogInterface.OnClickListener() &#123;<br>                           <span class="hljs-meta">@Override</span><br>                           <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">onClick</span><span class="hljs-params">(DialogInterface dialog, <span class="hljs-keyword">int</span> which)</span> </span>&#123;<br>                                <span class="hljs-comment">//关闭当前对话框</span><br>                                dialog.dismiss();<br>                                <span class="hljs-comment">//关闭这个app</span><br>                               MainActivity.<span class="hljs-keyword">this</span>.finish();<br>                           &#125;<br>                       &#125;)<br>                       .setNegativeButton(<span class="hljs-string">&quot;取消&quot;</span>, <span class="hljs-keyword">new</span> DialogInterface.OnClickListener() &#123;<br>                           <span class="hljs-meta">@Override</span><br>                           <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">onClick</span><span class="hljs-params">(DialogInterface dialog, <span class="hljs-keyword">int</span> which)</span> </span>&#123;<br>                               <span class="hljs-comment">//关闭当前对话框</span><br>                               dialog.dismiss();<br>                           &#125;<br>                       &#125;);<br>               <span class="hljs-comment">//3、builder对象调用create()方法创建一个对话框对象</span><br>               AlertDialog alertDialog = builder.create();<br>               <span class="hljs-comment">//4、该对象调用show()方法就可以运行了</span><br>               alertDialog.show();<br>           &#125;<br>       &#125;);<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title">initView</span><span class="hljs-params">()</span> </span>&#123;<br>        btn = findViewById(R.id.btn);<br>    &#125;<br>&#125;<br></code></pre></div></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">LinearLayout</span> <span class="hljs-attr">xmlns:android</span>=<span class="hljs-string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">xmlns:app</span>=<span class="hljs-string">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">xmlns:tools</span>=<span class="hljs-string">&quot;http://schemas.android.com/tools&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">&quot;match_parent&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">&quot;match_parent&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">tools:context</span>=<span class="hljs-string">&quot;.activitys.MainActivity&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">android:padding</span>=<span class="hljs-string">&quot;20dp&quot;</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">LinearLayout</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">&quot;match_parent&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">&quot;wrap_content&quot;</span>&gt;</span><br><br>        <span class="hljs-tag">&lt;<span class="hljs-name">Button</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:id</span>=<span class="hljs-string">&quot;@+id/btn&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">&quot;match_parent&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">&quot;wrap_content&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:text</span>=<span class="hljs-string">&quot;退出&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">LinearLayout</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">LinearLayout</span>&gt;</span><br></code></pre></div></td></tr></table></figure><ul><li>带【单选】的对话框</li></ul><p><img src="https://gitee.com/zengyuqin/drawing-bed/raw/master/img/image-20210501102340399.png" alt="image-20210501102340399" style="zoom:67%;" /></p><figure class="highlight java"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.example.hellp.activitys;<br><br><span class="hljs-keyword">import</span> android.app.AlertDialog;<br><span class="hljs-keyword">import</span> android.content.DialogInterface;<br><span class="hljs-keyword">import</span> android.os.Bundle;<br><span class="hljs-keyword">import</span> android.view.View;<br><span class="hljs-keyword">import</span> android.widget.Button;<br><span class="hljs-keyword">import</span> android.widget.TextView;<br><br><span class="hljs-keyword">import</span> androidx.appcompat.app.AppCompatActivity;<br><br><span class="hljs-keyword">import</span> com.example.hellp.R;<br><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">MainActivity</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">AppCompatActivity</span> </span>&#123;<br><br>    <span class="hljs-keyword">private</span> Button btn;<br>    <span class="hljs-keyword">private</span> TextView tv;<br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">int</span> index=<span class="hljs-number">0</span>;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-function"><span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title">onCreate</span><span class="hljs-params">(Bundle savedInstanceState)</span> </span>&#123;<br>        <span class="hljs-keyword">super</span>.onCreate(savedInstanceState);<br>        setContentView(R.layout.activity_main2);<br>        initView();<br>        setView();<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title">setView</span><span class="hljs-params">()</span> </span>&#123;<br>        String[] showMsg = <span class="hljs-keyword">new</span> String[]&#123;<span class="hljs-string">&quot;小号&quot;</span>,<span class="hljs-string">&quot;中号&quot;</span>,<span class="hljs-string">&quot;大号&quot;</span>,<span class="hljs-string">&quot;超大号&quot;</span>&#125;;<br>        <span class="hljs-keyword">int</span>[] textSize = <span class="hljs-keyword">new</span> <span class="hljs-keyword">int</span>[]&#123;<span class="hljs-number">10</span>, <span class="hljs-number">20</span>, <span class="hljs-number">30</span>, <span class="hljs-number">40</span>&#125;;<br>       btn.setOnClickListener(<span class="hljs-keyword">new</span> View.OnClickListener() &#123;<br>           <span class="hljs-comment">//点击按钮弹出一个对话框</span><br>           <span class="hljs-meta">@Override</span><br>           <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">onClick</span><span class="hljs-params">(View v)</span> </span>&#123;<br>               <span class="hljs-comment">//1、创建对话框的builder对象</span><br>               AlertDialog.Builder builder = <span class="hljs-keyword">new</span> AlertDialog.Builder(MainActivity.<span class="hljs-keyword">this</span>);<br>               <span class="hljs-comment">//2、该对象用于构建一个对话框模板</span><br>               builder.setIcon(R.mipmap.ic_launcher)<br>                       .setTitle(<span class="hljs-string">&quot;修改文本大小&quot;</span>)<br>                       <span class="hljs-comment">//第一个参数：显示的选项；第二个参数：默认选中第几个；第三个参数：监听事件</span><br>                       .setSingleChoiceItems(showMsg, index, <span class="hljs-keyword">new</span> DialogInterface.OnClickListener() &#123;<br>                           <span class="hljs-meta">@Override</span><br>                           <span class="hljs-comment">//which：选择了哪项就返回这一项的序号</span><br>                           <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">onClick</span><span class="hljs-params">(DialogInterface dialog, <span class="hljs-keyword">int</span> which)</span> </span>&#123;<br>                                index = which;<br>                           &#125;<br>                       &#125;)<br>                       .setPositiveButton(<span class="hljs-string">&quot;确定&quot;</span>, <span class="hljs-keyword">new</span> DialogInterface.OnClickListener() &#123;<br>                           <span class="hljs-meta">@Override</span><br>                           <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">onClick</span><span class="hljs-params">(DialogInterface dialog, <span class="hljs-keyword">int</span> which)</span> </span>&#123;<br>                               tv.setTextSize(textSize[index]);<br>                           &#125;<br>                       &#125;)<br>                       .setNegativeButton(<span class="hljs-string">&quot;取消&quot;</span>, <span class="hljs-keyword">new</span> DialogInterface.OnClickListener() &#123;<br>                           <span class="hljs-meta">@Override</span><br>                           <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">onClick</span><span class="hljs-params">(DialogInterface dialog, <span class="hljs-keyword">int</span> which)</span> </span>&#123;<br>                               <span class="hljs-comment">//关闭当前对话框</span><br>                               dialog.dismiss();<br>                           &#125;<br>                       &#125;);<br>               <span class="hljs-comment">//3、builder对象调用create()方法创建一个对话框对象</span><br>               AlertDialog alertDialog = builder.create();<br>               <span class="hljs-comment">//4、该对象调用show()方法就可以运行了</span><br>               alertDialog.show();<br>           &#125;<br>       &#125;);<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title">initView</span><span class="hljs-params">()</span> </span>&#123;<br>        btn = findViewById(R.id.btn);<br>        tv = findViewById(R.id.tv);<br>    &#125;<br>&#125;<br></code></pre></div></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">LinearLayout</span> <span class="hljs-attr">xmlns:android</span>=<span class="hljs-string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">xmlns:app</span>=<span class="hljs-string">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">xmlns:tools</span>=<span class="hljs-string">&quot;http://schemas.android.com/tools&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">&quot;match_parent&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">&quot;match_parent&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">tools:context</span>=<span class="hljs-string">&quot;.activitys.MainActivity&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">android:padding</span>=<span class="hljs-string">&quot;20dp&quot;</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">LinearLayout</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">&quot;match_parent&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">&quot;wrap_content&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:orientation</span>=<span class="hljs-string">&quot;vertical&quot;</span>&gt;</span><br><br>        <span class="hljs-tag">&lt;<span class="hljs-name">TextView</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:id</span>=<span class="hljs-string">&quot;@+id/tv&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">&quot;match_parent&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">&quot;wrap_content&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:text</span>=<span class="hljs-string">&quot;我是文本框&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:textSize</span>=<span class="hljs-string">&quot;30dp&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:gravity</span>=<span class="hljs-string">&quot;center_horizontal&quot;</span>/&gt;</span><br><br>        <span class="hljs-tag">&lt;<span class="hljs-name">Button</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:id</span>=<span class="hljs-string">&quot;@+id/btn&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">&quot;match_parent&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">&quot;wrap_content&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:text</span>=<span class="hljs-string">&quot;设置文本大小&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">LinearLayout</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">LinearLayout</span>&gt;</span><br></code></pre></div></td></tr></table></figure><ul><li>带【多选】的对话框</li></ul><p><img src="https://gitee.com/zengyuqin/drawing-bed/raw/master/img/image-20210501103636686.png" alt="image-20210501103636686" style="zoom:67%;" /></p><figure class="highlight java"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.example.hellp.activitys;<br><br><span class="hljs-keyword">import</span> android.app.AlertDialog;<br><span class="hljs-keyword">import</span> android.content.DialogInterface;<br><span class="hljs-keyword">import</span> android.os.Bundle;<br><span class="hljs-keyword">import</span> android.view.View;<br><span class="hljs-keyword">import</span> android.widget.Button;<br><span class="hljs-keyword">import</span> android.widget.Toast;<br><br><span class="hljs-keyword">import</span> androidx.appcompat.app.AppCompatActivity;<br><br><span class="hljs-keyword">import</span> com.example.hellp.R;<br><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">MainActivity</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">AppCompatActivity</span> </span>&#123;<br><br>    <span class="hljs-keyword">private</span> Button btn;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-function"><span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title">onCreate</span><span class="hljs-params">(Bundle savedInstanceState)</span> </span>&#123;<br>        <span class="hljs-keyword">super</span>.onCreate(savedInstanceState);<br>        setContentView(R.layout.activity_main2);<br>        initView();<br>        setView();<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title">setView</span><span class="hljs-params">()</span> </span>&#123;<br>        String[] showMsg = <span class="hljs-keyword">new</span> String[]&#123;<span class="hljs-string">&quot;唱歌&quot;</span>,<span class="hljs-string">&quot;跳舞&quot;</span>,<span class="hljs-string">&quot;足球&quot;</span>,<span class="hljs-string">&quot;篮球&quot;</span>&#125;;<br>        <span class="hljs-keyword">boolean</span>[] isCheck = <span class="hljs-keyword">new</span> <span class="hljs-keyword">boolean</span>[]&#123;<span class="hljs-keyword">true</span>, <span class="hljs-keyword">false</span>, <span class="hljs-keyword">false</span>, <span class="hljs-keyword">false</span>&#125;;<br>        btn.setOnClickListener(<span class="hljs-keyword">new</span> View.OnClickListener() &#123;<br>           <span class="hljs-comment">//点击按钮弹出一个对话框</span><br>           <span class="hljs-meta">@Override</span><br>           <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">onClick</span><span class="hljs-params">(View v)</span> </span>&#123;<br>               <span class="hljs-comment">//1、创建对话框的builder对象</span><br>               AlertDialog.Builder builder = <span class="hljs-keyword">new</span> AlertDialog.Builder(MainActivity.<span class="hljs-keyword">this</span>);<br>               <span class="hljs-comment">//2、该对象用于构建一个对话框模板</span><br>               builder.setIcon(R.mipmap.ic_launcher)<br>                       .setTitle(<span class="hljs-string">&quot;修改文本大小&quot;</span>)<br>                        .setMultiChoiceItems(showMsg, isCheck, <span class="hljs-keyword">new</span> DialogInterface.OnMultiChoiceClickListener()&#123;<br>                            <span class="hljs-meta">@Override</span><br>                            <span class="hljs-comment">//which：选点击哪一项就返回这一项的序号；isChecked：被点击项的选中状态</span><br>                            <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">onClick</span><span class="hljs-params">(DialogInterface dialog, <span class="hljs-keyword">int</span> which, <span class="hljs-keyword">boolean</span> isChecked)</span> </span>&#123;<br>                                isCheck[which] = isChecked;<br>                            &#125;<br>                        &#125;)<br>                       .setPositiveButton(<span class="hljs-string">&quot;确定&quot;</span>, <span class="hljs-keyword">new</span> DialogInterface.OnClickListener() &#123;<br>                           <span class="hljs-meta">@Override</span><br>                           <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">onClick</span><span class="hljs-params">(DialogInterface dialog, <span class="hljs-keyword">int</span> which)</span> </span>&#123;<br>                               StringBuffer sb = <span class="hljs-keyword">new</span> StringBuffer();<br>                               <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>; i&lt;isCheck.length; i++)&#123;<br>                                   <span class="hljs-keyword">if</span> (isCheck[i]==<span class="hljs-keyword">true</span>)&#123;<br>                                       sb.append(showMsg[i]).append(<span class="hljs-string">&quot;    &quot;</span>);<br>                                   &#125;<br>                               &#125;<br>                               Toast.makeText(MainActivity.<span class="hljs-keyword">this</span>, sb, Toast.LENGTH_SHORT).show();<br>                           &#125;<br>                       &#125;)<br>                       .setNegativeButton(<span class="hljs-string">&quot;取消&quot;</span>, <span class="hljs-keyword">new</span> DialogInterface.OnClickListener() &#123;<br>                           <span class="hljs-meta">@Override</span><br>                           <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">onClick</span><span class="hljs-params">(DialogInterface dialog, <span class="hljs-keyword">int</span> which)</span> </span>&#123;<br>                               <span class="hljs-comment">//关闭当前对话框</span><br>                               dialog.dismiss();<br>                           &#125;<br>                       &#125;);<br>               <span class="hljs-comment">//3、builder对象调用create()方法创建一个对话框对象</span><br>               AlertDialog alertDialog = builder.create();<br>               <span class="hljs-comment">//4、该对象调用show()方法就可以运行了</span><br>               alertDialog.show();<br>           &#125;<br>        &#125;);<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title">initView</span><span class="hljs-params">()</span> </span>&#123;<br>        btn = findViewById(R.id.btn);<br><br>    &#125;<br>&#125;<br></code></pre></div></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">LinearLayout</span> <span class="hljs-attr">xmlns:android</span>=<span class="hljs-string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">xmlns:app</span>=<span class="hljs-string">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">xmlns:tools</span>=<span class="hljs-string">&quot;http://schemas.android.com/tools&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">&quot;match_parent&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">&quot;match_parent&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">tools:context</span>=<span class="hljs-string">&quot;.activitys.MainActivity&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">android:padding</span>=<span class="hljs-string">&quot;20dp&quot;</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">LinearLayout</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">&quot;match_parent&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">&quot;wrap_content&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">Button</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:id</span>=<span class="hljs-string">&quot;@+id/btn&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">&quot;match_parent&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">&quot;wrap_content&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:text</span>=<span class="hljs-string">&quot;爱好&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">LinearLayout</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">LinearLayout</span>&gt;</span><br></code></pre></div></td></tr></table></figure><h3 id="listview">ListView</h3><p>==推荐使用RecyclerView==</p><p><img src="https://gitee.com/zengyuqin/drawing-bed/raw/master/img/image-20210507170225936.png" alt="image-20210507170225936" style="zoom: 50%;" /></p><p><img src="https://gitee.com/zengyuqin/drawing-bed/raw/master/img/image-20210507170313795.png" alt="image-20210507170313795" style="zoom: 50%;" /></p><p><img src="https://gitee.com/zengyuqin/drawing-bed/raw/master/img/image-20210507170407445.png" alt="image-20210507170407445" style="zoom: 50%;" /></p><p><img src="https://gitee.com/zengyuqin/drawing-bed/raw/master/img/image-20210507170643118.png" alt="image-20210507170643118" style="zoom: 50%;" /></p><p><img src="https://gitee.com/zengyuqin/drawing-bed/raw/master/img/image-20210507170705057.png" alt="image-20210507170705057" style="zoom: 33%;" /></p><p><img src="https://gitee.com/zengyuqin/drawing-bed/raw/master/img/image-20210508193836708.png" alt="image-20210508193836708" style="zoom:67%;" /></p><blockquote><p>itemlayout.xml</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">RelativeLayout</span> <span class="hljs-attr">xmlns:android</span>=<span class="hljs-string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">&quot;match_parent&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">&quot;match_parent&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">android:padding</span>=<span class="hljs-string">&quot;20dp&quot;</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">ImageView</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">&quot;120dp&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">&quot;90dp&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:id</span>=<span class="hljs-string">&quot;@+id/iv&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:layout_centerVertical</span>=<span class="hljs-string">&quot;true&quot;</span>/&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">TextView</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">&quot;wrap_content&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">&quot;wrap_content&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:id</span>=<span class="hljs-string">&quot;@+id/title&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:text</span>=<span class="hljs-string">&quot;标题&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:layout_toRightOf</span>=<span class="hljs-string">&quot;@+id/iv&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:layout_marginBottom</span>=<span class="hljs-string">&quot;50dp&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:layout_marginLeft</span>=<span class="hljs-string">&quot;10dp&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:layout_alignBottom</span>=<span class="hljs-string">&quot;@+id/iv&quot;</span>/&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">TextView</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">&quot;wrap_content&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">&quot;wrap_content&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:text</span>=<span class="hljs-string">&quot;价格:&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:layout_toRightOf</span>=<span class="hljs-string">&quot;@+id/iv&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:layout_marginBottom</span>=<span class="hljs-string">&quot;15dp&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:layout_marginLeft</span>=<span class="hljs-string">&quot;10dp&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:layout_alignBottom</span>=<span class="hljs-string">&quot;@+id/iv&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:textColor</span>=<span class="hljs-string">&quot;#C5694C&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:id</span>=<span class="hljs-string">&quot;@+id/priceText&quot;</span>/&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">TextView</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">&quot;wrap_content&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">&quot;wrap_content&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:layout_toRightOf</span>=<span class="hljs-string">&quot;@+id/priceText&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:layout_alignBottom</span>=<span class="hljs-string">&quot;@+id/priceText&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:layout_marginLeft</span>=<span class="hljs-string">&quot;5dp&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:text</span>=<span class="hljs-string">&quot;价格&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:textColor</span>=<span class="hljs-string">&quot;#C5694C&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:id</span>=<span class="hljs-string">&quot;@+id/price&quot;</span>/&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">RelativeLayout</span>&gt;</span><br></code></pre></div></td></tr></table></figure><blockquote><p>activity_text_view_1.xml</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">LinearLayout</span> <span class="hljs-attr">xmlns:android</span>=<span class="hljs-string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">xmlns:app</span>=<span class="hljs-string">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">xmlns:tools</span>=<span class="hljs-string">&quot;http://schemas.android.com/tools&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">&quot;match_parent&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">&quot;match_parent&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">tools:context</span>=<span class="hljs-string">&quot;.activitys.TextView_1&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">android:orientation</span>=<span class="hljs-string">&quot;vertical&quot;</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">TextView</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">&quot;match_parent&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">&quot;wrap_content&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:text</span>=<span class="hljs-string">&quot;商品列表&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:textSize</span>=<span class="hljs-string">&quot;30dp&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:gravity</span>=<span class="hljs-string">&quot;center&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:background</span>=<span class="hljs-string">&quot;#453737&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:textColor</span>=<span class="hljs-string">&quot;#eee&quot;</span>/&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">ListView</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">&quot;match_parent&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">&quot;wrap_content&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:id</span>=<span class="hljs-string">&quot;@+id/myList&quot;</span>/&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">LinearLayout</span>&gt;</span><br></code></pre></div></td></tr></table></figure><blockquote><p>TextView_1.java 未改进过的写法</p></blockquote><figure class="highlight java"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.example.hellp.activitys;<br><br><span class="hljs-keyword">import</span> android.os.Bundle;<br><span class="hljs-keyword">import</span> android.view.View;<br><span class="hljs-keyword">import</span> android.view.ViewGroup;<br><span class="hljs-keyword">import</span> android.widget.BaseAdapter;<br><span class="hljs-keyword">import</span> android.widget.ImageView;<br><span class="hljs-keyword">import</span> android.widget.ListView;<br><span class="hljs-keyword">import</span> android.widget.TextView;<br><br><span class="hljs-keyword">import</span> androidx.appcompat.app.AppCompatActivity;<br><br><span class="hljs-keyword">import</span> com.example.hellp.R;<br><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">TextView_1</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">AppCompatActivity</span> </span>&#123;<br><br>    ListView myList = <span class="hljs-keyword">null</span>;<br>    TextView title, price = <span class="hljs-keyword">null</span>;<br>    ImageView iv = <span class="hljs-keyword">null</span>;<br><br>    <span class="hljs-comment">//1、定义适配器中数组内容</span><br>    <span class="hljs-comment">//图片资源，drawable里面资源都有序列号，所有用int[]</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">int</span>[] icons = &#123;R.drawable.dog, R.drawable.dog2, R.drawable.earth, R.drawable.girl1, R.drawable.girl2, R.drawable.water&#125;;<br><br>    <span class="hljs-comment">//标题资源</span><br>    <span class="hljs-keyword">private</span> String[] titles = &#123;<span class="hljs-string">&quot;小狗&quot;</span>, <span class="hljs-string">&quot;小狗2&quot;</span>, <span class="hljs-string">&quot;地球&quot;</span>, <span class="hljs-string">&quot;美女1&quot;</span>,<span class="hljs-string">&quot;美女2&quot;</span>, <span class="hljs-string">&quot;水&quot;</span>&#125;;<br><br>    <span class="hljs-comment">//价格资源</span><br>    <span class="hljs-keyword">private</span> String[] prices = &#123;<span class="hljs-string">&quot;10元&quot;</span>,<span class="hljs-string">&quot;20元&quot;</span>,<span class="hljs-string">&quot;30元&quot;</span>,<span class="hljs-string">&quot;40元&quot;</span>,<span class="hljs-string">&quot;50元&quot;</span>,<span class="hljs-string">&quot;60元&quot;</span>&#125;;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-function"><span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title">onCreate</span><span class="hljs-params">(Bundle savedInstanceState)</span> </span>&#123;<br>        <span class="hljs-keyword">super</span>.onCreate(savedInstanceState);<br>        setContentView(R.layout.activity_text_view_1);<br>        initView();<br>    &#125;<br>    <br>    <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title">initView</span><span class="hljs-params">()</span> </span>&#123;<br>        myList = findViewById(R.id.myList);<br>        <span class="hljs-comment">//new一个适配器内部类</span><br>        MyAdapter myAdapter = <span class="hljs-keyword">new</span> MyAdapter();<br>        <span class="hljs-comment">//给myList添加适配器</span><br>        myList.setAdapter(myAdapter);<br>    &#125;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">MyAdapter</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">BaseAdapter</span> </span>&#123;<br><br>        <span class="hljs-meta">@Override</span><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">int</span> <span class="hljs-title">getCount</span><span class="hljs-params">()</span> </span>&#123;<span class="hljs-comment">//获取item的数量</span><br>            <span class="hljs-keyword">return</span> titles.length;<br>        &#125;<br><br>        <span class="hljs-meta">@Override</span><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> Object <span class="hljs-title">getItem</span><span class="hljs-params">(<span class="hljs-keyword">int</span> position)</span> </span>&#123;<span class="hljs-comment">//记录item序号，从0开始</span><br>            <span class="hljs-keyword">return</span> titles[position];<br>        &#125;<br><br>        <span class="hljs-meta">@Override</span><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">long</span> <span class="hljs-title">getItemId</span><span class="hljs-params">(<span class="hljs-keyword">int</span> position)</span> </span>&#123;<br>            <span class="hljs-keyword">return</span> position;<br>        &#125;<br><br>        <span class="hljs-meta">@Override</span><br>        <span class="hljs-comment">//用于配置listView要加载的内容，包括视图和数据项</span><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> View <span class="hljs-title">getView</span><span class="hljs-params">(<span class="hljs-keyword">int</span> position, View convertView, ViewGroup parent)</span> </span>&#123;<br>         <br>            <span class="hljs-comment">//1、将item的布局文件解析成view对象,下面操作view的时候相对于在操作itemlayout</span><br>            View view = View.inflate(TextView_1.<span class="hljs-keyword">this</span>, R.layout.itemlayout, <span class="hljs-keyword">null</span>);<br>            <span class="hljs-comment">//2、找到view中的控件</span><br>            title = view.findViewById(R.id.title);<br>            price = view.findViewById(R.id.price);<br>            iv = view.findViewById(R.id.iv);<br>            <span class="hljs-comment">//3、给控件赋值</span><br>            title.setText(titles[position]);<br>            iv.setBackgroundResource(icons[position]);<br>            price.setText(prices[position]);<br>            <span class="hljs-keyword">return</span> view;<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></div></td></tr></table></figure><blockquote><p>TextView_1.java ==改进过的写法==</p></blockquote><figure class="highlight java"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.example.hellp.activitys;<br><br><span class="hljs-keyword">import</span> android.os.Bundle;<br><span class="hljs-keyword">import</span> android.view.View;<br><span class="hljs-keyword">import</span> android.view.ViewGroup;<br><span class="hljs-keyword">import</span> android.widget.BaseAdapter;<br><span class="hljs-keyword">import</span> android.widget.ImageView;<br><span class="hljs-keyword">import</span> android.widget.ListView;<br><span class="hljs-keyword">import</span> android.widget.TextView;<br><br><span class="hljs-keyword">import</span> androidx.appcompat.app.AppCompatActivity;<br><br><span class="hljs-keyword">import</span> com.example.hellp.R;<br><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">TextView_1</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">AppCompatActivity</span> </span>&#123;<br><br>    ListView myList = <span class="hljs-keyword">null</span>;<br><br>    <span class="hljs-comment">//1、定义适配器中数组内容</span><br>    <span class="hljs-comment">//图片资源，drawable里面资源都有序列号，所有用int[]</span><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">int</span>[] icons = &#123;R.drawable.dog, R.drawable.dog2, R.drawable.earth, R.drawable.girl1, R.drawable.girl2, R.drawable.water&#125;;<br><br>    <span class="hljs-comment">//标题资源</span><br>    <span class="hljs-keyword">private</span> String[] titles = &#123;<span class="hljs-string">&quot;小狗&quot;</span>, <span class="hljs-string">&quot;小狗2&quot;</span>, <span class="hljs-string">&quot;地球&quot;</span>, <span class="hljs-string">&quot;美女1&quot;</span>,<span class="hljs-string">&quot;美女2&quot;</span>, <span class="hljs-string">&quot;水&quot;</span>&#125;;<br><br>    <span class="hljs-comment">//价格资源</span><br>    <span class="hljs-keyword">private</span> String[] prices = &#123;<span class="hljs-string">&quot;10元&quot;</span>,<span class="hljs-string">&quot;20元&quot;</span>,<span class="hljs-string">&quot;30元&quot;</span>,<span class="hljs-string">&quot;40元&quot;</span>,<span class="hljs-string">&quot;50元&quot;</span>,<span class="hljs-string">&quot;60元&quot;</span>&#125;;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-function"><span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title">onCreate</span><span class="hljs-params">(Bundle savedInstanceState)</span> </span>&#123;<br>        <span class="hljs-keyword">super</span>.onCreate(savedInstanceState);<br>        setContentView(R.layout.activity_text_view_1);<br>        initView();<br>    &#125;<br>    <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title">initView</span><span class="hljs-params">()</span> </span>&#123;<br>        myList = findViewById(R.id.myList);<br>        <span class="hljs-comment">//new一个适配器内部类</span><br>        MyAdapter myAdapter = <span class="hljs-keyword">new</span> MyAdapter();<br>        <span class="hljs-comment">//给myList添加适配器</span><br>        myList.setAdapter(myAdapter);<br>    &#125;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">MyAdapter</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">BaseAdapter</span> </span>&#123;<br><br>        <span class="hljs-meta">@Override</span><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">int</span> <span class="hljs-title">getCount</span><span class="hljs-params">()</span> </span>&#123;<span class="hljs-comment">//获取item的数量</span><br>            <span class="hljs-keyword">return</span> titles.length;<br>        &#125;<br><br>        <span class="hljs-meta">@Override</span><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> Object <span class="hljs-title">getItem</span><span class="hljs-params">(<span class="hljs-keyword">int</span> position)</span> </span>&#123;<span class="hljs-comment">//记录item序号，从0开始</span><br>            <span class="hljs-keyword">return</span> titles[position];<br>        &#125;<br><br>        <span class="hljs-meta">@Override</span><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">long</span> <span class="hljs-title">getItemId</span><span class="hljs-params">(<span class="hljs-keyword">int</span> position)</span> </span>&#123;<br>            <span class="hljs-keyword">return</span> position;<br>        &#125;<br><br>        <span class="hljs-meta">@Override</span><br>        <span class="hljs-comment">//用于配置listView要加载的内容，包括视图和数据项</span><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> View <span class="hljs-title">getView</span><span class="hljs-params">(<span class="hljs-keyword">int</span> position, View convertView, ViewGroup parent)</span> </span>&#123;<br>            <span class="hljs-comment">//优化写法，需要一个静态类</span><br>            ViewHolder holder = <span class="hljs-keyword">null</span>;<br>            <span class="hljs-comment">//用于缓存item视图的一个对象，如果为空就把itemlayout转换成View对象</span><br>            <span class="hljs-keyword">if</span> (convertView==<span class="hljs-keyword">null</span>)&#123;<br>                convertView = View.inflate(TextView_1.<span class="hljs-keyword">this</span>, R.layout.itemlayout, <span class="hljs-keyword">null</span>);<br>                holder = <span class="hljs-keyword">new</span> ViewHolder();<br>                holder.title = convertView.findViewById(R.id.title);<br>                holder.price = convertView.findViewById(R.id.price);<br>                holder.iv = convertView.findViewById(R.id.iv);<br>                convertView.setTag(holder);<br>            &#125;<span class="hljs-keyword">else</span> &#123;<br>                holder = (ViewHolder) convertView.getTag();<br>            &#125;<br>            holder.iv.setBackgroundResource(icons[position]);<br>            holder.price.setText(prices[position]);<br>            holder.title.setText(titles[position]);<br>            <span class="hljs-keyword">return</span> convertView;<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-keyword">static</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">ViewHolder</span> </span>&#123;<br>        TextView title;<br>        TextView price;<br>        ImageView iv;<br>    &#125;<br>&#125;<br></code></pre></div></td></tr></table></figure><h3 id="recyclerview">RecyclerView</h3><p><img src="https://gitee.com/zengyuqin/drawing-bed/raw/master/img/image-20210508185506114.png" alt="image-20210508185506114" style="zoom:50%;" /><img src="https://gitee.com/zengyuqin/drawing-bed/raw/master/img/image-20210508185958337.png" alt="image-20210508185958337" style="zoom:50%;" /></p><p><img src="https://gitee.com/zengyuqin/drawing-bed/raw/master/img/image-20210508193440611.png" alt="image-20210508193440611" style="zoom:67%;" /></p><blockquote><p>item_layout2.xml</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">LinearLayout</span> <span class="hljs-attr">xmlns:android</span>=<span class="hljs-string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">&quot;match_parent&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">&quot;match_parent&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">android:orientation</span>=<span class="hljs-string">&quot;horizontal&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">android:padding</span>=<span class="hljs-string">&quot;10dp&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">android:gravity</span>=<span class="hljs-string">&quot;center_vertical&quot;</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">ImageView</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">&quot;120dp&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">&quot;100dp&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:id</span>=<span class="hljs-string">&quot;@+id/iv&quot;</span>/&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">RelativeLayout</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">&quot;wrap_content&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">&quot;wrap_content&quot;</span>&gt;</span><br><br>        <span class="hljs-tag">&lt;<span class="hljs-name">TextView</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">&quot;wrap_content&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">&quot;wrap_content&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:id</span>=<span class="hljs-string">&quot;@+id/title&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:text</span>=<span class="hljs-string">&quot;标题&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:textColor</span>=<span class="hljs-string">&quot;#BD1919&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:background</span>=<span class="hljs-string">&quot;#E6DBDB&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:textSize</span>=<span class="hljs-string">&quot;30sp&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:layout_marginLeft</span>=<span class="hljs-string">&quot;20dp&quot;</span>/&gt;</span><br><br>        <span class="hljs-tag">&lt;<span class="hljs-name">TextView</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">&quot;wrap_content&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">&quot;wrap_content&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:id</span>=<span class="hljs-string">&quot;@+id/info&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:text</span>=<span class="hljs-string">&quot;详细信息&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:maxLines</span>=<span class="hljs-string">&quot;2&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:ellipsize</span>=<span class="hljs-string">&quot;end&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:textColor</span>=<span class="hljs-string">&quot;#fff&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:background</span>=<span class="hljs-string">&quot;#704343&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:textSize</span>=<span class="hljs-string">&quot;30sp&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:layout_marginLeft</span>=<span class="hljs-string">&quot;20dp&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:layout_marginTop</span>=<span class="hljs-string">&quot;10dp&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:layout_below</span>=<span class="hljs-string">&quot;@+id/title&quot;</span>/&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">RelativeLayout</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">LinearLayout</span>&gt;</span><br></code></pre></div></td></tr></table></figure><blockquote><p>activity_recycler_view_test.xml</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">LinearLayout</span> <span class="hljs-attr">xmlns:android</span>=<span class="hljs-string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">xmlns:app</span>=<span class="hljs-string">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">xmlns:tools</span>=<span class="hljs-string">&quot;http://schemas.android.com/tools&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">&quot;match_parent&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">&quot;match_parent&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">tools:context</span>=<span class="hljs-string">&quot;.activitys.RecyclerViewTest&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">android:orientation</span>=<span class="hljs-string">&quot;vertical&quot;</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">androidx.recyclerview.widget.RecyclerView</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">&quot;match_parent&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">&quot;wrap_content&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:id</span>=<span class="hljs-string">&quot;@+id/myList&quot;</span>/&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">LinearLayout</span>&gt;</span><br></code></pre></div></td></tr></table></figure><blockquote><p>RecyclerViewTest.java</p></blockquote><figure class="highlight java"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.example.hellp.activitys;<br><br><span class="hljs-keyword">import</span> android.os.Bundle;<br><span class="hljs-keyword">import</span> android.view.View;<br><span class="hljs-keyword">import</span> android.view.ViewGroup;<br><span class="hljs-keyword">import</span> android.widget.ImageView;<br><span class="hljs-keyword">import</span> android.widget.TextView;<br><br><span class="hljs-keyword">import</span> androidx.annotation.NonNull;<br><span class="hljs-keyword">import</span> androidx.appcompat.app.AppCompatActivity;<br><span class="hljs-keyword">import</span> androidx.recyclerview.widget.LinearLayoutManager;<br><span class="hljs-keyword">import</span> androidx.recyclerview.widget.RecyclerView;<br><br><span class="hljs-keyword">import</span> com.example.hellp.R;<br><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">RecyclerViewTest</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">AppCompatActivity</span> </span>&#123;<br><br><br>    <span class="hljs-comment">/*</span><br><span class="hljs-comment">    * 1、获取到recyclerView控件对象</span><br><span class="hljs-comment">    * 2、设计recyclerView控件的适配器，包括item视图的布局和数据内容都要在适配器中定义出来</span><br><span class="hljs-comment">    * 3、设计recyclerView的布局管理器</span><br><span class="hljs-comment">    * 4、创建适配器对象，将此对象交付给recyclerView控件对象</span><br><span class="hljs-comment">    * */</span><br><br>    <span class="hljs-keyword">private</span> RecyclerView myList;<br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">int</span>[] icons = &#123;R.drawable.dog, R.drawable.dog2, R.drawable.earth, R.drawable.girl1, R.drawable.girl2, R.drawable.water&#125;;<br>    <span class="hljs-keyword">private</span> String[] titles = &#123;<span class="hljs-string">&quot;小狗&quot;</span>, <span class="hljs-string">&quot;小狗2&quot;</span>, <span class="hljs-string">&quot;地球&quot;</span>, <span class="hljs-string">&quot;美女1&quot;</span>,<span class="hljs-string">&quot;美女2&quot;</span>, <span class="hljs-string">&quot;水&quot;</span>&#125;;<br>    <span class="hljs-keyword">private</span> String[] introduces = &#123;<br>            <span class="hljs-string">&quot;小狗真好看真好看真好看真好看真好看真好看真好看真好看真好看&quot;</span>,<br>            <span class="hljs-string">&quot;小狗2真好看真好看真好看真好看真好看真好看真好看真好看真好看&quot;</span>,<br>            <span class="hljs-string">&quot;地球真大真大真大真大真大真大真大真大真大真大真大真大真大真大真大&quot;</span>,<br>            <span class="hljs-string">&quot;美女1111111111111111111111111111111111111111111111&quot;</span>,<br>            <span class="hljs-string">&quot;美女22222222222222222222222222222222222222222222222&quot;</span>,<br>            <span class="hljs-string">&quot;水喝喝喝喝喝喝喝喝喝喝喝喝喝喝喝喝喝喝喝喝喝喝喝喝喝喝喝喝喝&quot;</span>&#125;;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-function"><span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title">onCreate</span><span class="hljs-params">(Bundle savedInstanceState)</span> </span>&#123;<br>        <span class="hljs-keyword">super</span>.onCreate(savedInstanceState);<br>        setContentView(R.layout.activity_recycler_view_test);<br>        initView();<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title">initView</span><span class="hljs-params">()</span> </span>&#123;<br>        myList = findViewById(R.id.myList);<br>        <span class="hljs-comment">//设置布局的形式是垂直布局</span><br>        myList.setLayoutManager(<span class="hljs-keyword">new</span> LinearLayoutManager(RecyclerViewTest.<span class="hljs-keyword">this</span>, LinearLayoutManager.VERTICAL, <span class="hljs-keyword">true</span>));<br>        MyAdapter myAdapter = <span class="hljs-keyword">new</span> MyAdapter();<br>        myList.setAdapter(myAdapter);<br>    &#125;<br><br>    <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">MyAdapter</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">RecyclerView</span>.<span class="hljs-title">Adapter</span>&lt;<span class="hljs-title">MyAdapter</span>.<span class="hljs-title">MyHolder</span>&gt; </span>&#123;<br><br>        <span class="hljs-meta">@NonNull</span><br>        <span class="hljs-meta">@Override</span><br>        <span class="hljs-comment">//获取itemView的视图对象，并将视图对象传递给viewHolder</span><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> MyHolder <span class="hljs-title">onCreateViewHolder</span><span class="hljs-params">(<span class="hljs-meta">@NonNull</span> ViewGroup parent, <span class="hljs-keyword">int</span> viewType)</span> </span>&#123;<br>            <span class="hljs-comment">//将item_layout2布局转换成View对象</span><br>            View v1 = View.inflate(RecyclerViewTest.<span class="hljs-keyword">this</span>, R.layout.item_layout2, <span class="hljs-keyword">null</span>);<br>            MyHolder myHolder = <span class="hljs-keyword">new</span> MyHolder(v1);<br>            <span class="hljs-keyword">return</span> myHolder;<br>        &#125;<br><br>        <span class="hljs-meta">@Override</span><br>        <span class="hljs-comment">//将值绑定给holder对象</span><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">onBindViewHolder</span><span class="hljs-params">(<span class="hljs-meta">@NonNull</span> MyHolder holder, <span class="hljs-keyword">int</span> position)</span> </span>&#123;<br>            holder.info.setText(introduces[position]);<br>            holder.title.setText(titles[position]);<br>            holder.iv.setBackgroundResource(icons[position]);<br>        &#125;<br><br>        <span class="hljs-meta">@Override</span><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">int</span> <span class="hljs-title">getItemCount</span><span class="hljs-params">()</span> </span>&#123;<br>            <span class="hljs-keyword">return</span> titles.length;<br>        &#125;<br><br>        <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">MyHolder</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">RecyclerView</span>.<span class="hljs-title">ViewHolder</span></span>&#123;<br>            <span class="hljs-comment">//定义需要赋值的控件对象</span><br>            ImageView iv;<br>            TextView title, info;<br>            <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">MyHolder</span><span class="hljs-params">(<span class="hljs-meta">@NonNull</span> View itemView)</span> </span>&#123;<br>                <span class="hljs-keyword">super</span>(itemView);<br>                iv = itemView.findViewById(R.id.iv);<br>                title = itemView.findViewById(R.id.title);<br>                info = itemView.findViewById(R.id.info);<br>            &#125;<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></div></td></tr></table></figure><h3 id="自定义view">自定义View</h3><p><img src="https://gitee.com/zengyuqin/drawing-bed/raw/master/img/image-20210508201703117.png" alt="image-20210508201703117" style="zoom:50%;" /><img src="https://gitee.com/zengyuqin/drawing-bed/raw/master/img/image-20210508201740412.png" alt="image-20210508201740412" style="zoom:50%;" /></p><h3 id="综合练习">综合练习</h3><p><img src="https://gitee.com/zengyuqin/drawing-bed/raw/master/img/image-20210430161255618.png" alt="image-20210430161255618" style="zoom:67%;" /></p><figure class="highlight java"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.example.hellp.activitys;<br><br><span class="hljs-keyword">import</span> android.os.Bundle;<br><span class="hljs-keyword">import</span> android.view.View;<br><span class="hljs-keyword">import</span> android.widget.Button;<br><span class="hljs-keyword">import</span> android.widget.EditText;<br><span class="hljs-keyword">import</span> android.widget.RadioButton;<br><span class="hljs-keyword">import</span> android.widget.RadioGroup;<br><span class="hljs-keyword">import</span> android.widget.Toast;<br><br><span class="hljs-keyword">import</span> androidx.appcompat.app.AppCompatActivity;<br><br><span class="hljs-keyword">import</span> com.example.hellp.R;<br><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">myLayout</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">AppCompatActivity</span> </span>&#123;<br><br>    <span class="hljs-keyword">private</span> EditText et_userName, et_password;<br>    <span class="hljs-keyword">private</span> Button btn_submit;<br>    <span class="hljs-keyword">private</span> RadioGroup radioGroup;<br>    <span class="hljs-keyword">private</span> RadioButton rb1, rb2;<br>    <span class="hljs-keyword">private</span> String gender;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-function"><span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title">onCreate</span><span class="hljs-params">(Bundle savedInstanceState)</span> </span>&#123;<br>        <span class="hljs-keyword">super</span>.onCreate(savedInstanceState);<br>        setContentView(R.layout.activity_my_layout);<br>        initView();<br>        setView();<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title">setView</span><span class="hljs-params">()</span> </span>&#123;<br>        btn_submit.setOnClickListener(<span class="hljs-keyword">new</span> View.OnClickListener() &#123;<br>            <span class="hljs-meta">@Override</span><br>            <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">onClick</span><span class="hljs-params">(View v)</span> </span>&#123;<br>                Toast.makeText(myLayout.<span class="hljs-keyword">this</span>,<br>                        <span class="hljs-string">&quot;用户名是：&quot;</span>+et_userName.getText().toString()+<span class="hljs-string">&quot;    密码是：&quot;</span>+et_password.getText().toString()+<span class="hljs-string">&quot;    你的性别是：&quot;</span>+gender,<br>                        Toast.LENGTH_SHORT).show();<br>            &#125;<br>        &#125;);<br><br>        radioGroup.setOnCheckedChangeListener(<span class="hljs-keyword">new</span> RadioGroup.OnCheckedChangeListener() &#123;<br>            <span class="hljs-meta">@Override</span><br>            <span class="hljs-comment">//group接收的就是RadioGroup对象，checkedId接收的是radioButton的id</span><br>            <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">onCheckedChanged</span><span class="hljs-params">(RadioGroup group, <span class="hljs-keyword">int</span> checkedId)</span> </span>&#123;<br>                <span class="hljs-keyword">if</span> (checkedId==R.id.rb1)&#123;<br>                    gender = <span class="hljs-string">&quot;男&quot;</span>;<br>                &#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (checkedId==R.id.rb2)&#123;<br>                    gender = <span class="hljs-string">&quot;女&quot;</span>;<br>                &#125;<br>            &#125;<br>        &#125;);<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title">initView</span><span class="hljs-params">()</span> </span>&#123;<br>        et_password = findViewById(R.id.et_password);<br>        et_userName = findViewById(R.id.et_userName);<br>        btn_submit = findViewById(R.id.btn_submit);<br>        radioGroup = findViewById(R.id.radio_group);<br>        rb1 = findViewById(R.id.rb1);<br>        rb2 = findViewById(R.id.rb2);<br>    &#125;<br>&#125;<br></code></pre></div></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">LinearLayout</span> <span class="hljs-attr">xmlns:android</span>=<span class="hljs-string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">xmlns:app</span>=<span class="hljs-string">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">xmlns:tools</span>=<span class="hljs-string">&quot;http://schemas.android.com/tools&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">&quot;match_parent&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">&quot;match_parent&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">tools:context</span>=<span class="hljs-string">&quot;.activitys.myLayout&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">android:orientation</span>=<span class="hljs-string">&quot;vertical&quot;</span>&gt;</span><br><br>   <span class="hljs-tag">&lt;<span class="hljs-name">TextView</span></span><br><span class="hljs-tag">       <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">&quot;match_parent&quot;</span></span><br><span class="hljs-tag">       <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">&quot;wrap_content&quot;</span></span><br><span class="hljs-tag">       <span class="hljs-attr">android:text</span>=<span class="hljs-string">&quot;注册&quot;</span></span><br><span class="hljs-tag">       <span class="hljs-attr">android:textSize</span>=<span class="hljs-string">&quot;30sp&quot;</span></span><br><span class="hljs-tag">       <span class="hljs-attr">android:background</span>=<span class="hljs-string">&quot;@color/purple_200&quot;</span></span><br><span class="hljs-tag">       <span class="hljs-attr">android:gravity</span>=<span class="hljs-string">&quot;center&quot;</span>/&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">ImageView</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">&quot;wrap_content&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">&quot;wrap_content&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:src</span>=<span class="hljs-string">&quot;@mipmap/ic_launcher&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:layout_gravity</span>=<span class="hljs-string">&quot;center&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:layout_margin</span>=<span class="hljs-string">&quot;20dp&quot;</span>/&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">LinearLayout</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">&quot;match_parent&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">&quot;wrap_content&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:orientation</span>=<span class="hljs-string">&quot;horizontal&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:padding</span>=<span class="hljs-string">&quot;20dp&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">TextView</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">&quot;wrap_content&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">&quot;wrap_content&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:text</span>=<span class="hljs-string">&quot;用户名：&quot;</span>/&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">EditText</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:id</span>=<span class="hljs-string">&quot;@+id/et_userName&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">&quot;match_parent&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">&quot;wrap_content&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:textColorHint</span>=<span class="hljs-string">&quot;@color/purple_200&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:hint</span>=<span class="hljs-string">&quot;请输入用户名&quot;</span>/&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">LinearLayout</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">LinearLayout</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">&quot;match_parent&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">&quot;wrap_content&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:orientation</span>=<span class="hljs-string">&quot;horizontal&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:padding</span>=<span class="hljs-string">&quot;20dp&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">TextView</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">&quot;wrap_content&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">&quot;wrap_content&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:text</span>=<span class="hljs-string">&quot;密码：&quot;</span>/&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">EditText</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:id</span>=<span class="hljs-string">&quot;@+id/et_password&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">&quot;match_parent&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">&quot;wrap_content&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:inputType</span>=<span class="hljs-string">&quot;textPassword&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:textColorHint</span>=<span class="hljs-string">&quot;@color/purple_200&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:hint</span>=<span class="hljs-string">&quot;请输入密码&quot;</span>/&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">LinearLayout</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">LinearLayout</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">&quot;match_parent&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">&quot;wrap_content&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:padding</span>=<span class="hljs-string">&quot;20dp&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">TextView</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">&quot;wrap_content&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">&quot;wrap_content&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:layout_gravity</span>=<span class="hljs-string">&quot;center_vertical&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:text</span>=<span class="hljs-string">&quot;性别：&quot;</span>/&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">RadioGroup</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:id</span>=<span class="hljs-string">&quot;@+id/radio_group&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">&quot;match_parent&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">&quot;wrap_content&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:orientation</span>=<span class="hljs-string">&quot;horizontal&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">RadioButton</span></span><br><span class="hljs-tag">                <span class="hljs-attr">android:id</span>=<span class="hljs-string">&quot;@+id/rb1&quot;</span></span><br><span class="hljs-tag">                <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">&quot;wrap_content&quot;</span></span><br><span class="hljs-tag">                <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">&quot;wrap_content&quot;</span></span><br><span class="hljs-tag">                <span class="hljs-attr">android:checked</span>=<span class="hljs-string">&quot;true&quot;</span></span><br><span class="hljs-tag">                <span class="hljs-attr">android:text</span>=<span class="hljs-string">&quot;男&quot;</span>/&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">RadioButton</span></span><br><span class="hljs-tag">                <span class="hljs-attr">android:id</span>=<span class="hljs-string">&quot;@+id/rb2&quot;</span></span><br><span class="hljs-tag">                <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">&quot;wrap_content&quot;</span></span><br><span class="hljs-tag">                <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">&quot;wrap_content&quot;</span></span><br><span class="hljs-tag">                <span class="hljs-attr">android:text</span>=<span class="hljs-string">&quot;女&quot;</span>/&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">RadioGroup</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">LinearLayout</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">LinearLayout</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">&quot;match_parent&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">&quot;wrap_content&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:padding</span>=<span class="hljs-string">&quot;20dp&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">TextView</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">&quot;wrap_content&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">&quot;wrap_content&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:layout_gravity</span>=<span class="hljs-string">&quot;center_vertical&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:text</span>=<span class="hljs-string">&quot;爱好：&quot;</span>/&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">CheckBox</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">&quot;wrap_content&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">&quot;wrap_content&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:text</span>=<span class="hljs-string">&quot;羽毛球&quot;</span>/&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">CheckBox</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">&quot;wrap_content&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">&quot;wrap_content&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:text</span>=<span class="hljs-string">&quot;足球&quot;</span>/&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">CheckBox</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">&quot;wrap_content&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">&quot;wrap_content&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:text</span>=<span class="hljs-string">&quot;乒乓球&quot;</span>/&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">LinearLayout</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">LinearLayout</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">&quot;match_parent&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">&quot;wrap_content&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:padding</span>=<span class="hljs-string">&quot;20dp&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:gravity</span>=<span class="hljs-string">&quot;center&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">Button</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:id</span>=<span class="hljs-string">&quot;@+id/btn_submit&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">&quot;wrap_content&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">&quot;wrap_content&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:text</span>=<span class="hljs-string">&quot;提交&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:layout_marginRight</span>=<span class="hljs-string">&quot;20dp&quot;</span>/&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">Button</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">&quot;wrap_content&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">&quot;wrap_content&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:text</span>=<span class="hljs-string">&quot;取消&quot;</span>/&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">LinearLayout</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">LinearLayout</span>&gt;</span><br></code></pre></div></td></tr></table></figure><h2 id="activity">Activity</h2><h3 id="activity的生命周期">Activity的生命周期</h3><p><img src="https://gitee.com/zengyuqin/drawing-bed/raw/master/img/image-20210508202256884.png" alt="image-20210508202256884" style="zoom:50%;" /><img src="https://gitee.com/zengyuqin/drawing-bed/raw/master/img/image-20210508202848653.png" alt="image-20210508202848653" style="zoom:50%;" /></p><h3 id="intent与intentfilter">Intent与IntentFilter</h3><p><img src="https://gitee.com/zengyuqin/drawing-bed/raw/master/img/image-20210508204049378.png" alt="image-20210508204049378" style="zoom:50%;" /></p><p><img src="https://img-blog.csdnimg.cn/20210510091728568.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMTIxMTEz,size_16,color_FFFFFF,t_70#pic_center" alt="image-20210508210822291" style="zoom:50%;" /></p><p><img src="https://img-blog.csdnimg.cn/20210510091754592.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMTIxMTEz,size_16,color_FFFFFF,t_70#pic_center" alt="image-20210508210923471" style="zoom:50%;" /></p><figure class="highlight java"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.example.hellp.activitys;<br><br><span class="hljs-keyword">import</span> android.content.Intent;<br><span class="hljs-keyword">import</span> android.os.Bundle;<br><span class="hljs-keyword">import</span> android.view.View;<br><span class="hljs-keyword">import</span> android.widget.Button;<br><br><span class="hljs-keyword">import</span> androidx.appcompat.app.AppCompatActivity;<br><br><span class="hljs-keyword">import</span> com.example.hellp.R;<br><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">IntentTestActivity</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">AppCompatActivity</span> </span>&#123;<br><br>    <span class="hljs-keyword">private</span> Button btn, btn2;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-function"><span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title">onCreate</span><span class="hljs-params">(Bundle savedInstanceState)</span> </span>&#123;<br>        <span class="hljs-keyword">super</span>.onCreate(savedInstanceState);<br>        setContentView(R.layout.activity_intent_test);<br>        initView();<br>        setView();<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title">setView</span><span class="hljs-params">()</span> </span>&#123;<br>        btn.setOnClickListener(<span class="hljs-keyword">new</span> View.OnClickListener() &#123;<br>            <span class="hljs-meta">@Override</span><br>            <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">onClick</span><span class="hljs-params">(View v)</span> </span>&#123;<br>                <span class="hljs-comment">//显式意图</span><br>                <span class="hljs-comment">//点击按钮实现页面的跳转;第一个参数：当前页面；第二个参数：跳转到的页面</span><br>                Intent intent = <span class="hljs-keyword">new</span> Intent(IntentTestActivity.<span class="hljs-keyword">this</span>, TextView_1.class);<br>                <span class="hljs-comment">//执行意图</span><br>                startActivity(intent);<br>            &#125;<br>        &#125;);<br><br>        btn2.setOnClickListener(<span class="hljs-keyword">new</span> View.OnClickListener() &#123;<br>            <span class="hljs-meta">@Override</span><br>            <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">onClick</span><span class="hljs-params">(View v)</span> </span>&#123;<br>                <span class="hljs-comment">//隐式意图：根据action属性到清单文件中进行匹配，然后执行匹配上的对应的activity</span><br>                Intent intent = <span class="hljs-keyword">new</span> Intent(<span class="hljs-string">&quot;recyclerViewTest.haha&quot;</span>);<br>                startActivity(intent);<br>            &#125;<br>        &#125;);<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title">initView</span><span class="hljs-params">()</span> </span>&#123;<br>        btn = findViewById(R.id.btn);<br>        btn2 = findViewById(R.id.btn2);<br>    &#125;<br>&#125;<br></code></pre></div></td></tr></table></figure><figure><img src="https://gitee.com/zengyuqin/drawing-bed/raw/master/img/image-20210508210428748.png" alt="image-20210508210428748" /><figcaption aria-hidden="true">image-20210508210428748</figcaption></figure><h3 id="activity之间跳转数据传递">Activity之间跳转数据传递</h3><p><img src="https://gitee.com/zengyuqin/drawing-bed/raw/master/img/image-20210508212236019.png" alt="image-20210508212236019" style="zoom:50%;" /></p><ul><li>方式一【putExtra】</li></ul><figure><img src="https://gitee.com/zengyuqin/drawing-bed/raw/master/img/image-20210508212156787.png" alt="image-20210508212156787" /><figcaption aria-hidden="true">image-20210508212156787</figcaption></figure><ul><li><p>方式二【bundle】</p><p>传的数据比较琐碎时用bundle封装一下更好。</p></li></ul><figure><img src="https://gitee.com/zengyuqin/drawing-bed/raw/master/img/image-20210508212833012.png" alt="image-20210508212833012" /><figcaption aria-hidden="true">image-20210508212833012</figcaption></figure><ul><li><p>数据回传</p><figure><img src="https://gitee.com/zengyuqin/drawing-bed/raw/master/img/image-20210508215233284.png" alt="image-20210508215233284" /><figcaption aria-hidden="true">image-20210508215233284</figcaption></figure></li></ul><h3 id="activity的任务栈和启动模式">Activity的任务栈和启动模式</h3><p>任务栈：一种用来存放Activity实例的容器。</p><p>创建Activity时就是将新的Activity入栈，而显示时默认显示栈顶的Activity。</p><ul><li>启动模式</li></ul><p><img src="https://gitee.com/zengyuqin/drawing-bed/raw/master/img/image-20210508215707344.png" alt="image-20210508215707344" style="zoom:50%;" /></p><p><img src="https://gitee.com/zengyuqin/drawing-bed/raw/master/img/image-20210508215754119.png" alt="image-20210508215754119" style="zoom:50%;" /></p><p><img src="https://gitee.com/zengyuqin/drawing-bed/raw/master/img/image-20210508215856570.png" alt="image-20210508215856570" style="zoom:50%;" /></p><h3 id="使用fragment">使用Fragment</h3><p><img src="https://gitee.com/zengyuqin/drawing-bed/raw/master/img/image-20210508220218608.png" alt="image-20210508220218608" style="zoom:50%;" /></p><p><img src="https://gitee.com/zengyuqin/drawing-bed/raw/master/img/image-20210508220409609.png" alt="image-20210508220409609" style="zoom:50%;" /></p><h2 id="数据存储">数据存储</h2><h3 id="文件存储方式">文件存储方式</h3><figure><img src="https://gitee.com/zengyuqin/drawing-bed/raw/master/img/image-20210509085829691.png" alt="image-20210509085829691" /><figcaption aria-hidden="true">image-20210509085829691</figcaption></figure><p><img src="https://gitee.com/zengyuqin/drawing-bed/raw/master/img/image-20210509095750166.png" alt="image-20210509095750166" style="zoom:50%;" /></p><blockquote><p>MainActivity.java</p></blockquote><figure class="highlight java"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.example.hellp;<br><br><span class="hljs-keyword">import</span> android.os.Bundle;<br><span class="hljs-keyword">import</span> android.util.Log;<br><span class="hljs-keyword">import</span> android.view.View;<br><span class="hljs-keyword">import</span> android.widget.Button;<br><span class="hljs-keyword">import</span> android.widget.EditText;<br><span class="hljs-keyword">import</span> android.widget.Toast;<br><br><span class="hljs-keyword">import</span> androidx.appcompat.app.AppCompatActivity;<br><br><span class="hljs-keyword">import</span> java.util.Map;<br><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">MainActivity</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">AppCompatActivity</span> </span>&#123;<br><br>    <span class="hljs-keyword">private</span> Button btnRegister, btnLogin;<br>    <span class="hljs-keyword">private</span> EditText etUsername, etPwd;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-function"><span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title">onCreate</span><span class="hljs-params">(Bundle savedInstanceState)</span> </span>&#123;<br>        <span class="hljs-keyword">super</span>.onCreate(savedInstanceState);<br>        setContentView(R.layout.activity_main);<br><br>        <span class="hljs-comment">//初始化页面</span><br>        initView();<br>        setView();<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title">setView</span><span class="hljs-params">()</span> </span>&#123;<br>        btnRegister.setOnClickListener(<span class="hljs-keyword">new</span> View.OnClickListener() &#123;<br>            <span class="hljs-meta">@Override</span><br>            <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">onClick</span><span class="hljs-params">(View v)</span> </span>&#123;<br>                <span class="hljs-comment">//提取输入框中的用户名密码，写入到文件中</span><br>                String username = etUsername.getText().toString();<br>                String password = etPwd.getText().toString();<br>                <span class="hljs-keyword">if</span> (username.equals(<span class="hljs-string">&quot;&quot;</span>) || password.equals(<span class="hljs-string">&quot;&quot;</span>))&#123;<br>                    Toast.makeText(MainActivity.<span class="hljs-keyword">this</span>, <span class="hljs-string">&quot;用户名、密码不能为空！&quot;</span>, Toast.LENGTH_SHORT).show();<br>                &#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (SaveInfoIO.saveUserInfo(username, password, MainActivity.<span class="hljs-keyword">this</span>))&#123;<br>                    Toast.makeText(MainActivity.<span class="hljs-keyword">this</span>, <span class="hljs-string">&quot;注册成功！&quot;</span>, Toast.LENGTH_SHORT).show();<br>                &#125;<span class="hljs-keyword">else</span> &#123;<br>                    Toast.makeText(MainActivity.<span class="hljs-keyword">this</span>, <span class="hljs-string">&quot;注册失败！&quot;</span>, Toast.LENGTH_SHORT).show();<br>                &#125;<br>            &#125;<br>        &#125;);<br><br>        btnLogin.setOnClickListener(<span class="hljs-keyword">new</span> View.OnClickListener() &#123;<br>            <span class="hljs-meta">@Override</span><br>            <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">onClick</span><span class="hljs-params">(View v)</span> </span>&#123;<br>                String username = etUsername.getText().toString();<br>                String password = etPwd.getText().toString();<br>                Map&lt;String, String&gt; userInfo = SaveInfoIO.getUserInfo(MainActivity.<span class="hljs-keyword">this</span>);<br>                Log.d(<span class="hljs-string">&quot;myLog&quot;</span>,password);<br>                <span class="hljs-keyword">if</span> (userInfo!=<span class="hljs-keyword">null</span> &amp;&amp; username.equals(userInfo.get(<span class="hljs-string">&quot;username&quot;</span>)) &amp;&amp; password.equals(userInfo.get(<span class="hljs-string">&quot;password&quot;</span>)))&#123;<br>                    Toast.makeText(MainActivity.<span class="hljs-keyword">this</span>, <span class="hljs-string">&quot;登录成功！&quot;</span>, Toast.LENGTH_SHORT).show();<br>                &#125;<span class="hljs-keyword">else</span> &#123;<br>                    Toast.makeText(MainActivity.<span class="hljs-keyword">this</span>, <span class="hljs-string">&quot;用户名或密码错误！&quot;</span>, Toast.LENGTH_SHORT).show();<br>                &#125;<br><br>            &#125;<br>        &#125;);<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title">initView</span><span class="hljs-params">()</span> </span>&#123;<br>        btnLogin = findViewById(R.id.btn_login);<br>        btnRegister = findViewById(R.id.btn_register);<br>        etUsername = findViewById(R.id.username);<br>        etPwd = findViewById(R.id.pwd);<br>    &#125;<br>&#125;<br></code></pre></div></td></tr></table></figure><blockquote><p>SaveInfoIn.java</p></blockquote><figure class="highlight java"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.example.hellp;<br><br><span class="hljs-keyword">import</span> android.content.Context;<br><br><span class="hljs-keyword">import</span> java.io.FileInputStream;<br><span class="hljs-keyword">import</span> java.io.FileOutputStream;<br><span class="hljs-keyword">import</span> java.io.IOException;<br><span class="hljs-keyword">import</span> java.util.HashMap;<br><span class="hljs-keyword">import</span> java.util.Map;<br><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">SaveInfoIO</span> </span>&#123;<br>    <span class="hljs-comment">//用户数据的写入</span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">boolean</span> <span class="hljs-title">saveUserInfo</span><span class="hljs-params">(String username, String password, Context context)</span> </span>&#123;<br>        String msg = <span class="hljs-keyword">null</span>;<br>        FileOutputStream fos = <span class="hljs-keyword">null</span>;<br><br>        <span class="hljs-keyword">try</span> &#123;<br>            <span class="hljs-comment">//第一个参数：要操作的文件名；第二个参数：文件的访问方式</span><br>            fos = context.openFileOutput(<span class="hljs-string">&quot;MyData.txt&quot;</span>, Context.MODE_PRIVATE);<br>            msg = username + <span class="hljs-string">&quot;:&quot;</span> + password;<br>            <span class="hljs-comment">//getBytes()将字符串转换为字节流</span><br>            fos.write(msg.getBytes());<br>            <span class="hljs-keyword">return</span> <span class="hljs-keyword">true</span>;<br>        &#125; <span class="hljs-keyword">catch</span> (IOException e) &#123;<br>            e.printStackTrace();<br>            <span class="hljs-keyword">return</span> <span class="hljs-keyword">false</span>;<br>        &#125; <span class="hljs-keyword">finally</span> &#123;<br>            <span class="hljs-keyword">try</span> &#123;<br>                fos.close();<br>            &#125; <span class="hljs-keyword">catch</span> (IOException e) &#123;<br>                e.printStackTrace();<br>            &#125;<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-comment">//用户数据的读取</span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> Map&lt;String, String&gt; <span class="hljs-title">getUserInfo</span><span class="hljs-params">(Context context)</span></span>&#123;<br>        <span class="hljs-comment">//获取文件的输入流</span><br>        FileInputStream fis = <span class="hljs-keyword">null</span>;<br>        <span class="hljs-keyword">try</span> &#123;<br>            fis = context.openFileInput(<span class="hljs-string">&quot;MyData.text&quot;</span>);<br>            <span class="hljs-keyword">byte</span>[] buffer = <span class="hljs-keyword">new</span> <span class="hljs-keyword">byte</span>[fis.available()];<br>            fis.read(buffer);<br>            String msg = <span class="hljs-keyword">new</span> String(buffer);<br>            String[] split = msg.split(<span class="hljs-string">&quot;:&quot;</span>);<br>            HashMap&lt;String, String&gt; map = <span class="hljs-keyword">new</span> HashMap&lt;&gt;();<br>            map.put(<span class="hljs-string">&quot;username&quot;</span>, split[<span class="hljs-number">0</span>]);<br>            map.put(<span class="hljs-string">&quot;password&quot;</span>, split[<span class="hljs-number">1</span>]);<br>            <span class="hljs-keyword">return</span> map;<br>        &#125; <span class="hljs-keyword">catch</span> (IOException e) &#123;<br>            e.printStackTrace();<br>            <span class="hljs-keyword">return</span> <span class="hljs-keyword">null</span>;<br>        &#125;<span class="hljs-keyword">finally</span> &#123;<br>            <span class="hljs-keyword">try</span> &#123;<br>                <span class="hljs-keyword">if</span> (fis!=<span class="hljs-keyword">null</span>)&#123;<br>                    fis.close();<br>                &#125;<br><br>            &#125; <span class="hljs-keyword">catch</span> (IOException e) &#123;<br>                e.printStackTrace();<br>            &#125;<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></div></td></tr></table></figure><blockquote><p>activity_main.xml</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">LinearLayout</span> <span class="hljs-attr">xmlns:android</span>=<span class="hljs-string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">xmlns:app</span>=<span class="hljs-string">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">xmlns:tools</span>=<span class="hljs-string">&quot;http://schemas.android.com/tools&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">&quot;match_parent&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">&quot;match_parent&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">tools:context</span>=<span class="hljs-string">&quot;.MainActivity&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">android:orientation</span>=<span class="hljs-string">&quot;vertical&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">android:gravity</span>=<span class="hljs-string">&quot;center&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">android:padding</span>=<span class="hljs-string">&quot;40dp&quot;</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">ImageView</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">&quot;wrap_content&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">&quot;wrap_content&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:src</span>=<span class="hljs-string">&quot;@mipmap/ic_launcher&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:layout_marginBottom</span>=<span class="hljs-string">&quot;20dp&quot;</span>/&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">EditText</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:id</span>=<span class="hljs-string">&quot;@+id/username&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">&quot;match_parent&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">&quot;wrap_content&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:hint</span>=<span class="hljs-string">&quot;请输入用户名：&quot;</span>/&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">EditText</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:id</span>=<span class="hljs-string">&quot;@+id/pwd&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">&quot;match_parent&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">&quot;wrap_content&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:hint</span>=<span class="hljs-string">&quot;请输入密码：&quot;</span>/&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">LinearLayout</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">&quot;match_parent&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">&quot;wrap_content&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:orientation</span>=<span class="hljs-string">&quot;horizontal&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:gravity</span>=<span class="hljs-string">&quot;center_horizontal&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">Button</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:id</span>=<span class="hljs-string">&quot;@+id/btn_register&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">&quot;wrap_content&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">&quot;wrap_content&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:text</span>=<span class="hljs-string">&quot;注册&quot;</span>/&gt;</span><br><br>        <span class="hljs-tag">&lt;<span class="hljs-name">Button</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:id</span>=<span class="hljs-string">&quot;@+id/btn_login&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">&quot;wrap_content&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">&quot;wrap_content&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:layout_marginLeft</span>=<span class="hljs-string">&quot;20dp&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:text</span>=<span class="hljs-string">&quot;登录&quot;</span>/&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">LinearLayout</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">LinearLayout</span>&gt;</span><br></code></pre></div></td></tr></table></figure><h3 id="sharepreferences方式">SharePreferences方式</h3><p>==此方式比文件方式更便捷==</p><p><img src="https://gitee.com/zengyuqin/drawing-bed/raw/master/img/image-20210509100127856.png" alt="image-20210509100127856" style="zoom: 50%;" /></p><figure><img src="https://gitee.com/zengyuqin/drawing-bed/raw/master/img/image-20210509101457932.png" alt="image-20210509101457932" /><figcaption aria-hidden="true">image-20210509101457932</figcaption></figure><figure><img src="https://gitee.com/zengyuqin/drawing-bed/raw/master/img/image-20210509101520725.png" alt="image-20210509101520725" /><figcaption aria-hidden="true">image-20210509101520725</figcaption></figure><figure><img src="https://gitee.com/zengyuqin/drawing-bed/raw/master/img/image-20210509101757866.png" alt="image-20210509101757866" /><figcaption aria-hidden="true">image-20210509101757866</figcaption></figure><h3 id="sqlite方式">SQLite方式</h3><p><img src="https://gitee.com/zengyuqin/drawing-bed/raw/master/img/image-20210509101901122.png" alt="image-20210509101901122" style="zoom:50%;" /></p><p><img src="https://gitee.com/zengyuqin/drawing-bed/raw/master/img/image-20210509192859777.png" alt="image-20210509192859777" style="zoom:50%;" /></p><p><img src="https://gitee.com/zengyuqin/drawing-bed/raw/master/img/image-20210509193257676.png" alt="image-20210509193257676" style="zoom:50%;" /></p><figure><img src="https://gitee.com/zengyuqin/drawing-bed/raw/master/img/image-20210509210301705.png" alt="image-20210509210301705" /><figcaption aria-hidden="true">image-20210509210301705</figcaption></figure><blockquote><p>activity_main.xml</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs XML"><span class="hljs-meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">LinearLayout</span> <span class="hljs-attr">xmlns:android</span>=<span class="hljs-string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">xmlns:app</span>=<span class="hljs-string">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">xmlns:tools</span>=<span class="hljs-string">&quot;http://schemas.android.com/tools&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">&quot;match_parent&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">&quot;match_parent&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">tools:context</span>=<span class="hljs-string">&quot;.MainActivity&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">android:orientation</span>=<span class="hljs-string">&quot;vertical&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">android:gravity</span>=<span class="hljs-string">&quot;center&quot;</span></span><br><span class="hljs-tag">    <span class="hljs-attr">android:padding</span>=<span class="hljs-string">&quot;20dp&quot;</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">ImageView</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">&quot;wrap_content&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">&quot;wrap_content&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:src</span>=<span class="hljs-string">&quot;@mipmap/ic_launcher&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:layout_marginBottom</span>=<span class="hljs-string">&quot;20dp&quot;</span>/&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">EditText</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:id</span>=<span class="hljs-string">&quot;@+id/et_username&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">&quot;match_parent&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">&quot;wrap_content&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:hint</span>=<span class="hljs-string">&quot;请输入用户名&quot;</span>/&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">EditText</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:id</span>=<span class="hljs-string">&quot;@+id/et_pwd&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">&quot;match_parent&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">&quot;wrap_content&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:hint</span>=<span class="hljs-string">&quot;请输入密码&quot;</span>/&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">Button</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:id</span>=<span class="hljs-string">&quot;@+id/btn_select_by_condition&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">&quot;wrap_content&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">&quot;wrap_content&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:text</span>=<span class="hljs-string">&quot;条件查询&quot;</span>/&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">EditText</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:id</span>=<span class="hljs-string">&quot;@+id/et_select_by_condition&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">&quot;match_parent&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">&quot;wrap_content&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:hint</span>=<span class="hljs-string">&quot;请输入条件&quot;</span>/&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">LinearLayout</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">&quot;match_parent&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">&quot;wrap_content&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:orientation</span>=<span class="hljs-string">&quot;horizontal&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:gravity</span>=<span class="hljs-string">&quot;center_horizontal&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">Button</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:id</span>=<span class="hljs-string">&quot;@+id/btn_add&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">&quot;wrap_content&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">&quot;wrap_content&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:text</span>=<span class="hljs-string">&quot;增加&quot;</span>/&gt;</span><br><br>        <span class="hljs-tag">&lt;<span class="hljs-name">Button</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:id</span>=<span class="hljs-string">&quot;@+id/btn_delete&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">&quot;wrap_content&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">&quot;wrap_content&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:layout_marginLeft</span>=<span class="hljs-string">&quot;5dp&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:text</span>=<span class="hljs-string">&quot;删除&quot;</span>/&gt;</span><br><br>        <span class="hljs-tag">&lt;<span class="hljs-name">Button</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:id</span>=<span class="hljs-string">&quot;@+id/btn_update&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">&quot;wrap_content&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">&quot;wrap_content&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:layout_marginLeft</span>=<span class="hljs-string">&quot;5dp&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:text</span>=<span class="hljs-string">&quot;修改&quot;</span>/&gt;</span><br><br>        <span class="hljs-tag">&lt;<span class="hljs-name">Button</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:id</span>=<span class="hljs-string">&quot;@+id/btn_select&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">&quot;wrap_content&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">&quot;wrap_content&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:layout_marginLeft</span>=<span class="hljs-string">&quot;5dp&quot;</span></span><br><span class="hljs-tag">            <span class="hljs-attr">android:text</span>=<span class="hljs-string">&quot;查询&quot;</span>/&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">LinearLayout</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">TextView</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:id</span>=<span class="hljs-string">&quot;@+id/show_info&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:layout_width</span>=<span class="hljs-string">&quot;wrap_content&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:layout_height</span>=<span class="hljs-string">&quot;wrap_content&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:text</span>=<span class="hljs-string">&quot;查询显示的结果&quot;</span></span><br><span class="hljs-tag">        <span class="hljs-attr">android:textSize</span>=<span class="hljs-string">&quot;25sp&quot;</span>/&gt;</span><br><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">LinearLayout</span>&gt;</span><br></code></pre></div></td></tr></table></figure><blockquote><p>MainActivity.java</p></blockquote><figure class="highlight java"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.example.hellp;<br><br><span class="hljs-keyword">import</span> android.content.Context;<br><span class="hljs-keyword">import</span> android.database.Cursor;<br><span class="hljs-keyword">import</span> android.database.sqlite.SQLiteDatabase;<br><span class="hljs-keyword">import</span> android.database.sqlite.SQLiteOpenHelper;<br><span class="hljs-keyword">import</span> android.os.Bundle;<br><span class="hljs-keyword">import</span> android.view.View;<br><span class="hljs-keyword">import</span> android.widget.Button;<br><span class="hljs-keyword">import</span> android.widget.EditText;<br><span class="hljs-keyword">import</span> android.widget.TextView;<br><br><span class="hljs-keyword">import</span> androidx.annotation.Nullable;<br><span class="hljs-keyword">import</span> androidx.appcompat.app.AppCompatActivity;<br><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">MainActivity</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">AppCompatActivity</span> <span class="hljs-keyword">implements</span> <span class="hljs-title">View</span>.<span class="hljs-title">OnClickListener</span> </span>&#123;<br><br>    <span class="hljs-keyword">private</span> Button btn_add, btn_delete, btn_update, btn_select, btn_select_by_condition;<br>    <span class="hljs-keyword">private</span> TextView show_info;<br>    <span class="hljs-keyword">private</span> MyDbHelper myDbHelper;<br>    <span class="hljs-keyword">private</span> SQLiteDatabase db;<br>    <span class="hljs-keyword">private</span> EditText et_username, et_pwd, et_select_by_condition;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-function"><span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title">onCreate</span><span class="hljs-params">(Bundle savedInstanceState)</span> </span>&#123;<br>        <span class="hljs-keyword">super</span>.onCreate(savedInstanceState);<br>        setContentView(R.layout.activity_main);<br><br>        initView();<br>        setView();<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title">setView</span><span class="hljs-params">()</span> </span>&#123;<br>        btn_add.setOnClickListener(<span class="hljs-keyword">this</span>);<br>        btn_select.setOnClickListener(<span class="hljs-keyword">this</span>);<br>        btn_select_by_condition.setOnClickListener(<span class="hljs-keyword">this</span>);<br>        btn_delete.setOnClickListener(<span class="hljs-keyword">this</span>);<br>        btn_update.setOnClickListener(<span class="hljs-keyword">this</span>);<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title">initView</span><span class="hljs-params">()</span> </span>&#123;<br>        btn_add = findViewById(R.id.btn_add);<br>        btn_delete = findViewById(R.id.btn_delete);<br>        btn_update = findViewById(R.id.btn_update);<br>        btn_select = findViewById(R.id.btn_select);<br>        show_info = findViewById(R.id.show_info);<br>        et_username = findViewById(R.id.et_username);<br>        et_pwd = findViewById(R.id.et_pwd);<br>        btn_select_by_condition = findViewById(R.id.btn_select_by_condition);<br>        et_select_by_condition = findViewById(R.id.et_select_by_condition);<br><br>        <span class="hljs-comment">//创建数据库和表</span><br>        <span class="hljs-comment">//设置数据库的相关参数，初始化数据库</span><br>        myDbHelper = <span class="hljs-keyword">new</span> MyDbHelper(MainActivity.<span class="hljs-keyword">this</span>, <span class="hljs-string">&quot;MyDatabase.db&quot;</span>, <span class="hljs-keyword">null</span>, <span class="hljs-number">666</span>);<br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">onClick</span><span class="hljs-params">(View v)</span> </span>&#123;<br>        <span class="hljs-keyword">switch</span> (v.getId())&#123;<br>            <span class="hljs-keyword">case</span> R.id.btn_add:<br>                <span class="hljs-comment">//通过帮助类获取到数据库对象</span><br>                db = myDbHelper.getWritableDatabase();<br>                String username = et_username.getText().toString();<br>                String password = et_pwd.getText().toString();<br><br>                <span class="hljs-comment">//第一种写法</span><br>                <span class="hljs-comment">/*</span><br><span class="hljs-comment">                //创建一个ContentValues对象，用于存储记录的字段值，以键值对的方式存储，“键”对应字段名</span><br><span class="hljs-comment">                ContentValues contentValues = new ContentValues();</span><br><span class="hljs-comment">                //自增的user_id就不用添加了</span><br><span class="hljs-comment">               // contentValues.put(&quot;user_id&quot;, 1);</span><br><span class="hljs-comment">                contentValues.put(&quot;userName&quot;, username);</span><br><span class="hljs-comment">                contentValues.put(&quot;password&quot;, password);</span><br><span class="hljs-comment">                long i = db.insert(&quot;user&quot;, null, contentValues);</span><br><span class="hljs-comment">                if (i!=-1)&#123;</span><br><span class="hljs-comment">                    Toast.makeText(this, &quot;成功&quot;, Toast.LENGTH_SHORT).show();</span><br><span class="hljs-comment">                &#125;else &#123;</span><br><span class="hljs-comment">                    Toast.makeText(this, &quot;失败&quot;, Toast.LENGTH_SHORT).show();</span><br><span class="hljs-comment">                &#125;</span><br><span class="hljs-comment">                */</span><br>                <span class="hljs-comment">//第二种写法：?是占位符</span><br>                db.execSQL(<span class="hljs-string">&quot;insert into user (userName, password) values(?, ?)&quot;</span>, <span class="hljs-keyword">new</span> Object[]&#123;username, password&#125;);<br>                db.close();<br>                <span class="hljs-keyword">break</span>;<br>            <span class="hljs-keyword">case</span> R.id.btn_select:<br>                db = myDbHelper.getWritableDatabase();<br>                <span class="hljs-comment">//Cursor：结果集，结果集中会有游标，游标会指向结果集中的某一条记录，游标指向哪条记录，我们获取的就是哪一条记录，初始时指向第一条记录</span><br>                Cursor cursor = db.query(<span class="hljs-string">&quot;user&quot;</span>, <span class="hljs-keyword">new</span> String[]&#123;<span class="hljs-string">&quot;userName&quot;</span>, <span class="hljs-string">&quot;password&quot;</span>&#125;, <span class="hljs-keyword">null</span>, <span class="hljs-keyword">null</span>, <span class="hljs-keyword">null</span>, <span class="hljs-keyword">null</span>, <span class="hljs-keyword">null</span>);<br>                cursor.moveToFirst();<br>                show_info.setText(<span class="hljs-string">&quot;用户名：&quot;</span> + cursor.getString(<span class="hljs-number">0</span>) + <span class="hljs-string">&quot;   密码：&quot;</span> + cursor.getString(<span class="hljs-number">1</span>));<br>                <span class="hljs-comment">//移动游标，如果到了最后一条，cursor.moveToNext()返回false</span><br>                <span class="hljs-keyword">while</span> (cursor.moveToNext())&#123;<br>                    show_info.append(<span class="hljs-string">&quot;\n&quot;</span>+<span class="hljs-string">&quot;用户名：&quot;</span> + cursor.getString(<span class="hljs-number">0</span>) + <span class="hljs-string">&quot;   密码：&quot;</span> + cursor.getString(<span class="hljs-number">1</span>));<br>                &#125;<br>                cursor.close();<br>                db.close();<br>                <span class="hljs-keyword">break</span>;<br>            <span class="hljs-keyword">case</span> R.id.btn_select_by_condition:<br>                db = myDbHelper.getWritableDatabase();<br>                String condition = et_select_by_condition.getText().toString();<br><br>                <span class="hljs-comment">//第一种写法</span><br>               <span class="hljs-comment">// Cursor cursor1 = db.query(&quot;user&quot;, new String[]&#123;&quot;userName&quot;, &quot;password&quot;&#125;, &quot;userName=?&quot;, new String[]&#123;condition&#125;, null, null, null);</span><br>                <span class="hljs-comment">//第二种写法</span><br>                Cursor cursor1 = db.rawQuery(<span class="hljs-string">&quot;select userName, password from user where userName=?&quot;</span>, <span class="hljs-keyword">new</span> String[]&#123;condition&#125;);<br><br>                show_info.setText(<span class="hljs-string">&quot;查询结果如下：&quot;</span>);<br>                <span class="hljs-keyword">while</span> (cursor1.moveToNext())&#123;<br>                    show_info.append(<span class="hljs-string">&quot;\n&quot;</span>+<span class="hljs-string">&quot;用户名：&quot;</span> + cursor1.getString(<span class="hljs-number">0</span>) + <span class="hljs-string">&quot;   密码：&quot;</span> + cursor1.getString(<span class="hljs-number">1</span>));<br>                &#125;<br>                cursor1.close();<br>                db.close();<br>                <span class="hljs-keyword">break</span>;<br>            <span class="hljs-keyword">case</span> R.id.btn_delete:<br>                db = myDbHelper.getWritableDatabase();<br>                String condition1 = et_select_by_condition.getText().toString();<br><br>                <span class="hljs-comment">//第一种写法</span><br>                <span class="hljs-comment">/*</span><br><span class="hljs-comment">                int i = db.delete(&quot;user&quot;, &quot;userName=?&quot;, new String[]&#123;condition1&#125;);</span><br><span class="hljs-comment">                if (i&gt;0)&#123;</span><br><span class="hljs-comment">                    Toast.makeText(this, &quot;删除成功！删除了&quot;+i+&quot;条！&quot;, Toast.LENGTH_SHORT).show();</span><br><span class="hljs-comment">                &#125;else &#123;</span><br><span class="hljs-comment">                    Toast.makeText(this, &quot;删除失败！&quot;, Toast.LENGTH_SHORT).show();</span><br><span class="hljs-comment">                &#125;</span><br><span class="hljs-comment">                */</span><br>                <span class="hljs-comment">//第二种写法，此方法无法返回删除的条数</span><br>                db.execSQL(<span class="hljs-string">&quot;delete from user where userName=?&quot;</span>, <span class="hljs-keyword">new</span> Object[]&#123;condition1&#125;);<br>                db.close();<br>                <span class="hljs-keyword">break</span>;<br>            <span class="hljs-keyword">case</span> R.id.btn_update:<br>                db = myDbHelper.getWritableDatabase();<br>                String condition2 = et_select_by_condition.getText().toString();<br>                String username1 = et_username.getText().toString();<br>                String password1 = et_pwd.getText().toString();<br>                <span class="hljs-comment">//第一种写法</span><br>                <span class="hljs-comment">/*</span><br><span class="hljs-comment">                ContentValues contentValues2 = new ContentValues();</span><br><span class="hljs-comment">                contentValues2.put(&quot;userName&quot;, username1);</span><br><span class="hljs-comment">                contentValues2.put(&quot;password&quot;, password1);</span><br><span class="hljs-comment">                db.update(&quot;user&quot;, contentValues2, &quot;userName=?&quot;, new String[]&#123;condition2&#125;);</span><br><span class="hljs-comment">                */</span><br>                <span class="hljs-comment">//第二种写法</span><br>                db.execSQL(<span class="hljs-string">&quot;update user set userName=?, password=? where userName=?&quot;</span>, <span class="hljs-keyword">new</span> Object[]&#123;username1, password1, condition2&#125;);<br>                db.close();<br>                <span class="hljs-keyword">break</span>;<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-comment">//数据库帮助类</span><br>    <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">MyDbHelper</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">SQLiteOpenHelper</span> </span>&#123;<br><br>        <span class="hljs-comment">//构造器作用：用来定义数据库</span><br>        <span class="hljs-comment">//参数含义：上下文；数据库文件的名称；结果集工厂；版本号</span><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">MyDbHelper</span><span class="hljs-params">(<span class="hljs-meta">@Nullable</span> Context context, <span class="hljs-meta">@Nullable</span> String name, <span class="hljs-meta">@Nullable</span> SQLiteDatabase.CursorFactory factory, <span class="hljs-keyword">int</span> version)</span> </span>&#123;<br>            <span class="hljs-keyword">super</span>(context, name, factory, version);<br>        &#125;<br><br>        <span class="hljs-meta">@Override</span><br>        <span class="hljs-comment">//数据库初始化的时候创建的表，用于创建表或视图文件</span><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">onCreate</span><span class="hljs-params">(SQLiteDatabase db)</span> </span>&#123;<br>            db.execSQL(<span class="hljs-string">&quot;CREATE table user(user_id integer PRIMARY key AUTOINCREMENT, userName varchar(10), password varchar(10))&quot;</span>);<br>        &#125;<br><br>        <span class="hljs-meta">@Override</span><br>        <span class="hljs-comment">//升级方法</span><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">onUpgrade</span><span class="hljs-params">(SQLiteDatabase db, <span class="hljs-keyword">int</span> oldVersion, <span class="hljs-keyword">int</span> newVersion)</span> </span>&#123;<br><br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>安卓</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
